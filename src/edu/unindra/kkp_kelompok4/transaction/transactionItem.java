package edu.unindra.kkp_kelompok4.transaction;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

import edu.unindra.kkp_kelompok4.Services.serviceCheckIn;
import edu.unindra.kkp_kelompok4.Services.serviceDetailCartCheckin;
import edu.unindra.kkp_kelompok4.Services.serviceDetailCheckin;
import edu.unindra.kkp_kelompok4.Services.serviceEmployee;
import edu.unindra.kkp_kelompok4.Services.serviceIncomingItems;
import edu.unindra.kkp_kelompok4.Services.serviceReport;
import edu.unindra.kkp_kelompok4.TableModel.tableModelCheckin;
import edu.unindra.kkp_kelompok4.TableModel.tableModelDetailCheckin;
import edu.unindra.kkp_kelompok4.TableModel.tableModelShoppingCart;
import edu.unindra.kkp_kelompok4.dao.DAO_CheckIn;
import edu.unindra.kkp_kelompok4.dao.DAO_DetailCartCheckIn;
import edu.unindra.kkp_kelompok4.dao.DAO_DetailCheckin;
import edu.unindra.kkp_kelompok4.dao.DAO_Employee;
import edu.unindra.kkp_kelompok4.dao.DAO_IncomingItems;
import edu.unindra.kkp_kelompok4.dao.DAO_Report;
import edu.unindra.kkp_kelompok4.model.*;
import java.util.List;
import java.util.Locale;
import javax.swing.JOptionPane;

/**
 *
 * @author ripal
 */
public class transactionItem extends javax.swing.JPanel {

    private serviceCheckIn service = new DAO_CheckIn();
    private serviceDetailCheckin serviceDetailCheckin = new DAO_DetailCheckin() ;
    private serviceDetailCartCheckin serviceDetailCart = new DAO_DetailCartCheckIn() ;
    private serviceEmployee servEmployee = new DAO_Employee();
    private serviceReport reportService = new DAO_Report();
    private serviceIncomingItems servIncomingItems = new DAO_IncomingItems();
    
    private tableModelCheckin tabelModelCheckin = new tableModelCheckin();
    private tableModelDetailCheckin tabelModelDetail = new tableModelDetailCheckin();
    private tableModelShoppingCart tableModelShoppingCart = new tableModelShoppingCart();
    
    String  id ;
    private int noColumnIndex = 0;
    private int noColumnWidth = 50;
    public transactionItem(String idEmployee) {
	    initComponents();
	 id = idEmployee;
	disableField();
	itemTableCheckin.setModel(tabelModelCheckin);
	itemTableDetailCheckin.setModel(tabelModelDetail);
	tableShoppingCart.setModel(tableModelShoppingCart);
	loadData();
	loadDataCart();
	panelDetailCheckin.setVisible(false);
	printButton.setVisible(false);
	cancelButtonDetail.setVisible(false);
	deleteButton.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                mainPanel = new javax.swing.JPanel();
                dataPanel = new javax.swing.JPanel();
                addButton = new javax.swing.JButton();
                deleteButton = new javax.swing.JButton();
                cancelButtonDetail = new javax.swing.JButton();
                jScrollPane1 = new javax.swing.JScrollPane();
                itemTableCheckin = new javax.swing.JTable();
                titleLabel2 = new javax.swing.JLabel();
                panelDetailCheckin = new javax.swing.JPanel();
                jScrollPane3 = new javax.swing.JScrollPane();
                itemTableDetailCheckin = new javax.swing.JTable();
                titleLabel = new javax.swing.JLabel();
                closeLabel = new javax.swing.JLabel();
                searchTransactionList = new javax.swing.JTextField();
                jLabel2 = new javax.swing.JLabel();
                printButton = new javax.swing.JButton();
                addPanel = new javax.swing.JPanel();
                titleLabel1 = new javax.swing.JLabel();
                transactionDetail = new javax.swing.JPanel();
                labelOrder = new javax.swing.JLabel();
                orderId = new javax.swing.JTextField();
                labelDateOrder = new javax.swing.JLabel();
                dateField = new javax.swing.JTextField();
                distributorDetail = new javax.swing.JPanel();
                labelDistributorId = new javax.swing.JLabel();
                distributorId = new javax.swing.JTextField();
                labelDistributorName = new javax.swing.JLabel();
                distributorName = new javax.swing.JTextField();
                distributorChoose = new javax.swing.JButton();
                distributorField = new javax.swing.JPanel();
                labelDistributor = new javax.swing.JLabel();
                itemDetail = new javax.swing.JPanel();
                itemDetails = new javax.swing.JPanel();
                labelItem = new javax.swing.JLabel();
                jScrollPane4 = new javax.swing.JScrollPane();
                itemField = new javax.swing.JPanel();
                labelItemCode = new javax.swing.JLabel();
                itemCode = new javax.swing.JTextField();
                itemChoose = new javax.swing.JButton();
                labelItemName = new javax.swing.JLabel();
                itemName = new javax.swing.JTextField();
                labelItemUnit = new javax.swing.JLabel();
                itemUnit = new javax.swing.JTextField();
                labelItemPrice = new javax.swing.JLabel();
                itemPrice = new javax.swing.JTextField();
                itemTotal = new javax.swing.JTextField();
                labelItemTotal = new javax.swing.JLabel();
                labelItemSubTotal = new javax.swing.JLabel();
                itemSubTotal = new javax.swing.JTextField();
                add_Button1 = new javax.swing.JButton();
                clearButton = new javax.swing.JButton();
                cancelButton = new javax.swing.JButton();
                jScrollPane2 = new javax.swing.JScrollPane();
                tableShoppingCart = new javax.swing.JTable();
                jPanel1 = new javax.swing.JPanel();
                totalLabel = new javax.swing.JLabel();
                totalItem = new javax.swing.JLabel();
                saveTransactionButton = new javax.swing.JButton();

                setLayout(new java.awt.CardLayout());

                mainPanel.setLayout(new java.awt.CardLayout());

                dataPanel.setBackground(new java.awt.Color(255, 255, 255));

                addButton.setBackground(new java.awt.Color(102, 51, 255));
                addButton.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
                addButton.setForeground(new java.awt.Color(255, 255, 255));
                addButton.setText("Tambah");
                addButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                addButtonActionPerformed(evt);
                        }
                });

                deleteButton.setBackground(new java.awt.Color(255, 0, 0));
                deleteButton.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
                deleteButton.setForeground(new java.awt.Color(255, 255, 255));
                deleteButton.setText("Hapus");
                deleteButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                deleteButtonActionPerformed(evt);
                        }
                });

                cancelButtonDetail.setBackground(new java.awt.Color(0, 204, 204));
                cancelButtonDetail.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
                cancelButtonDetail.setForeground(new java.awt.Color(255, 255, 255));
                cancelButtonDetail.setText("Batal");
                cancelButtonDetail.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                cancelButtonDetailActionPerformed(evt);
                        }
                });

                itemTableCheckin.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {
                                {null, null, null, null},
                                {null, null, null, null},
                                {null, null, null, null},
                                {null, null, null, null}
                        },
                        new String [] {
                                "Title 1", "Title 2", "Title 3", "Title 4"
                        }
                ));
                itemTableCheckin.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                itemTableCheckinMouseClicked(evt);
                        }
                });
                jScrollPane1.setViewportView(itemTableCheckin);

                titleLabel2.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
                titleLabel2.setText("Data Pemesanan Barang");

                itemTableDetailCheckin.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {
                                {null, null, null, null},
                                {null, null, null, null},
                                {null, null, null, null},
                                {null, null, null, null}
                        },
                        new String [] {
                                "Title 1", "Title 2", "Title 3", "Title 4"
                        }
                ));
                itemTableDetailCheckin.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                itemTableDetailCheckinMouseClicked(evt);
                        }
                });
                jScrollPane3.setViewportView(itemTableDetailCheckin);

                titleLabel.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
                titleLabel.setText("Detail Pemesanan Barang");

                closeLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
                closeLabel.setText("X");
                closeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                closeLabelMouseClicked(evt);
                        }
                });

                javax.swing.GroupLayout panelDetailCheckinLayout = new javax.swing.GroupLayout(panelDetailCheckin);
                panelDetailCheckin.setLayout(panelDetailCheckinLayout);
                panelDetailCheckinLayout.setHorizontalGroup(
                        panelDetailCheckinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelDetailCheckinLayout.createSequentialGroup()
                                .addComponent(titleLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(closeLabel)
                                .addGap(30, 30, 30))
                        .addGroup(panelDetailCheckinLayout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );
                panelDetailCheckinLayout.setVerticalGroup(
                        panelDetailCheckinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelDetailCheckinLayout.createSequentialGroup()
                                .addGroup(panelDetailCheckinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(closeLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE))
                );

                searchTransactionList.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
                searchTransactionList.setForeground(java.awt.Color.gray);
                searchTransactionList.setText("Cari Transaksi");
                searchTransactionList.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
                searchTransactionList.addFocusListener(new java.awt.event.FocusAdapter() {
                        public void focusGained(java.awt.event.FocusEvent evt) {
                                searchTransactionListFocusGained(evt);
                        }
                        public void focusLost(java.awt.event.FocusEvent evt) {
                                searchTransactionListFocusLost(evt);
                        }
                });
                searchTransactionList.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                searchTransactionListActionPerformed(evt);
                        }
                });
                searchTransactionList.addKeyListener(new java.awt.event.KeyAdapter() {
                        public void keyReleased(java.awt.event.KeyEvent evt) {
                                searchTransactionListKeyReleased(evt);
                        }
                        public void keyTyped(java.awt.event.KeyEvent evt) {
                                searchTransactionListKeyTyped(evt);
                        }
                });

                jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/unindra/kkp_kelompok4/resource/image/HomeApp/searchItems.png"))); // NOI18N

                printButton.setBackground(new java.awt.Color(153, 153, 0));
                printButton.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
                printButton.setForeground(new java.awt.Color(255, 255, 255));
                printButton.setText("Cetak Surat Jalan");
                printButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                printButtonActionPerformed(evt);
                        }
                });

                javax.swing.GroupLayout dataPanelLayout = new javax.swing.GroupLayout(dataPanel);
                dataPanel.setLayout(dataPanelLayout);
                dataPanelLayout.setHorizontalGroup(
                        dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(dataPanelLayout.createSequentialGroup()
                                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(titleLabel2)
                                        .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addGroup(dataPanelLayout.createSequentialGroup()
                                                        .addGap(12, 12, 12)
                                                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(cancelButtonDetail)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(printButton, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jLabel2)
                                                        .addGap(8, 8, 8)
                                                        .addComponent(searchTransactionList, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(dataPanelLayout.createSequentialGroup()
                                                        .addGap(10, 10, 10)
                                                        .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(panelDetailCheckin, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(25, 25, 25))
                );
                dataPanelLayout.setVerticalGroup(
                        dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(dataPanelLayout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(titleLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(7, 7, 7)
                                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(searchTransactionList, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(cancelButtonDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(printButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(14, 14, 14)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(panelDetailCheckin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                );

                mainPanel.add(dataPanel, "card2");

                addPanel.setBackground(new java.awt.Color(255, 255, 255));

                titleLabel1.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
                titleLabel1.setText("Transaksi Barang Masuk");

                transactionDetail.setBackground(new java.awt.Color(0, 0, 255));

                labelOrder.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
                labelOrder.setForeground(new java.awt.Color(255, 255, 255));
                labelOrder.setText("No Pemesanan");

                orderId.setHorizontalAlignment(javax.swing.JTextField.CENTER);
                orderId.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

                labelDateOrder.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
                labelDateOrder.setForeground(new java.awt.Color(255, 255, 255));
                labelDateOrder.setText("Tanggal");

                dateField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
                dateField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

                javax.swing.GroupLayout transactionDetailLayout = new javax.swing.GroupLayout(transactionDetail);
                transactionDetail.setLayout(transactionDetailLayout);
                transactionDetailLayout.setHorizontalGroup(
                        transactionDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(transactionDetailLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(transactionDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(labelOrder)
                                        .addComponent(orderId, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(21, 21, 21)
                                .addGroup(transactionDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(labelDateOrder))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );
                transactionDetailLayout.setVerticalGroup(
                        transactionDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(transactionDetailLayout.createSequentialGroup()
                                .addGroup(transactionDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(labelOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(labelDateOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(7, 7, 7)
                                .addGroup(transactionDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(orderId, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 13, Short.MAX_VALUE))
                );

                distributorDetail.setBackground(new java.awt.Color(255, 255, 255));
                distributorDetail.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

                labelDistributorId.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
                labelDistributorId.setText("ID Distributor");

                distributorId.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

                labelDistributorName.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
                labelDistributorName.setText("Nama Distributor");

                distributorName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

                distributorChoose.setText("...");
                distributorChoose.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
                distributorChoose.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                distributorChooseActionPerformed(evt);
                        }
                });

                distributorField.setBackground(new java.awt.Color(0, 0, 255));

                labelDistributor.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
                labelDistributor.setForeground(new java.awt.Color(255, 255, 255));
                labelDistributor.setText("DISTRIBUTOR");

                javax.swing.GroupLayout distributorFieldLayout = new javax.swing.GroupLayout(distributorField);
                distributorField.setLayout(distributorFieldLayout);
                distributorFieldLayout.setHorizontalGroup(
                        distributorFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, distributorFieldLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(labelDistributor)
                                .addGap(121, 121, 121))
                );
                distributorFieldLayout.setVerticalGroup(
                        distributorFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(labelDistributor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                );

                javax.swing.GroupLayout distributorDetailLayout = new javax.swing.GroupLayout(distributorDetail);
                distributorDetail.setLayout(distributorDetailLayout);
                distributorDetailLayout.setHorizontalGroup(
                        distributorDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(distributorDetailLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(distributorDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(distributorDetailLayout.createSequentialGroup()
                                                .addComponent(labelDistributorId)
                                                .addGap(63, 63, 63))
                                        .addGroup(distributorDetailLayout.createSequentialGroup()
                                                .addComponent(distributorId)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(distributorChoose, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)))
                                .addGroup(distributorDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(labelDistributorName)
                                        .addComponent(distributorName, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())
                        .addComponent(distributorField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                );
                distributorDetailLayout.setVerticalGroup(
                        distributorDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, distributorDetailLayout.createSequentialGroup()
                                .addComponent(distributorField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(distributorDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(labelDistributorId, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                                        .addComponent(labelDistributorName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(distributorDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(distributorId, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(distributorName, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(distributorChoose, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );

                itemDetail.setBackground(new java.awt.Color(255, 255, 255));
                itemDetail.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

                itemDetails.setBackground(new java.awt.Color(0, 0, 255));

                labelItem.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
                labelItem.setForeground(new java.awt.Color(255, 255, 255));
                labelItem.setText("BARANG");

                javax.swing.GroupLayout itemDetailsLayout = new javax.swing.GroupLayout(itemDetails);
                itemDetails.setLayout(itemDetailsLayout);
                itemDetailsLayout.setHorizontalGroup(
                        itemDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(itemDetailsLayout.createSequentialGroup()
                                .addGap(137, 137, 137)
                                .addComponent(labelItem)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );
                itemDetailsLayout.setVerticalGroup(
                        itemDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(labelItem, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                );

                jScrollPane4.setBorder(null);

                itemField.setBackground(new java.awt.Color(255, 255, 255));

                labelItemCode.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
                labelItemCode.setText("Kode Barang");

                itemCode.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

                itemChoose.setText("...");
                itemChoose.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
                itemChoose.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                itemChooseActionPerformed(evt);
                        }
                });

                labelItemName.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
                labelItemName.setText("Nama Barang");

                itemName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

                labelItemUnit.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
                labelItemUnit.setText("Satuan");

                itemUnit.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

                labelItemPrice.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
                labelItemPrice.setText("Harga");

                itemPrice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
                itemPrice.addKeyListener(new java.awt.event.KeyAdapter() {
                        public void keyPressed(java.awt.event.KeyEvent evt) {
                                itemPriceKeyPressed(evt);
                        }
                        public void keyReleased(java.awt.event.KeyEvent evt) {
                                itemPriceKeyReleased(evt);
                        }
                });

                itemTotal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
                itemTotal.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                itemTotalActionPerformed(evt);
                        }
                });
                itemTotal.addKeyListener(new java.awt.event.KeyAdapter() {
                        public void keyReleased(java.awt.event.KeyEvent evt) {
                                itemTotalKeyReleased(evt);
                        }
                        public void keyTyped(java.awt.event.KeyEvent evt) {
                                itemTotalKeyTyped(evt);
                        }
                });

                labelItemTotal.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
                labelItemTotal.setText("Jumlah");

                labelItemSubTotal.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
                labelItemSubTotal.setText("Subtotal");

                itemSubTotal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

                add_Button1.setBackground(new java.awt.Color(0, 0, 255));
                add_Button1.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
                add_Button1.setForeground(new java.awt.Color(255, 255, 255));
                add_Button1.setText("Tambah");
                add_Button1.setToolTipText("");
                add_Button1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
                add_Button1.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                add_Button1ActionPerformed(evt);
                        }
                });

                clearButton.setBackground(new java.awt.Color(255, 0, 0));
                clearButton.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
                clearButton.setForeground(new java.awt.Color(255, 255, 255));
                clearButton.setText("Bersihkan");
                clearButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
                clearButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                clearButtonActionPerformed(evt);
                        }
                });

                cancelButton.setBackground(new java.awt.Color(0, 153, 153));
                cancelButton.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
                cancelButton.setForeground(new java.awt.Color(255, 255, 255));
                cancelButton.setText("Batal");
                cancelButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
                cancelButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                cancelButtonActionPerformed(evt);
                        }
                });

                javax.swing.GroupLayout itemFieldLayout = new javax.swing.GroupLayout(itemField);
                itemField.setLayout(itemFieldLayout);
                itemFieldLayout.setHorizontalGroup(
                        itemFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(itemFieldLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(itemFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(itemFieldLayout.createSequentialGroup()
                                                .addComponent(itemCode)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(itemChoose, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(itemName)
                                        .addComponent(itemUnit)
                                        .addComponent(itemPrice)
                                        .addComponent(itemTotal)
                                        .addComponent(itemSubTotal)
                                        .addGroup(itemFieldLayout.createSequentialGroup()
                                                .addGroup(itemFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(labelItemCode)
                                                        .addComponent(labelItemName)
                                                        .addComponent(labelItemUnit)
                                                        .addComponent(labelItemPrice)
                                                        .addComponent(labelItemTotal)
                                                        .addComponent(labelItemSubTotal))
                                                .addGap(0, 0, Short.MAX_VALUE))
                                        .addGroup(itemFieldLayout.createSequentialGroup()
                                                .addComponent(add_Button1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(clearButton, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap())
                );
                itemFieldLayout.setVerticalGroup(
                        itemFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(itemFieldLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(labelItemCode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(itemFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(itemCode, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(itemChoose, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelItemName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(itemName, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelItemUnit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(itemUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelItemPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(itemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelItemTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(itemTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelItemSubTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(itemSubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(itemFieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(add_Button1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())
                );

                jScrollPane4.setViewportView(itemField);

                javax.swing.GroupLayout itemDetailLayout = new javax.swing.GroupLayout(itemDetail);
                itemDetail.setLayout(itemDetailLayout);
                itemDetailLayout.setHorizontalGroup(
                        itemDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(itemDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane4)
                );
                itemDetailLayout.setVerticalGroup(
                        itemDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(itemDetailLayout.createSequentialGroup()
                                .addComponent(itemDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE))
                );

                tableShoppingCart.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {
                                {null, null, null, null},
                                {null, null, null, null},
                                {null, null, null, null},
                                {null, null, null, null}
                        },
                        new String [] {
                                "Title 1", "Title 2", "Title 3", "Title 4"
                        }
                ));
                tableShoppingCart.setShowGrid(false);
                tableShoppingCart.setSurrendersFocusOnKeystroke(true);
                tableShoppingCart.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                tableShoppingCartMouseClicked(evt);
                        }
                });
                jScrollPane2.setViewportView(tableShoppingCart);

                jPanel1.setBackground(new java.awt.Color(255, 255, 255));

                totalLabel.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
                totalLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
                totalLabel.setText("Total Pesanan");

                totalItem.setFont(new java.awt.Font("Century Gothic", 1, 36)); // NOI18N
                totalItem.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
                totalItem.setText("00000");

                javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
                jPanel1.setLayout(jPanel1Layout);
                jPanel1Layout.setHorizontalGroup(
                        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(totalLabel)
                                .addGap(104, 104, 104)
                                .addComponent(totalItem, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                                .addContainerGap())
                );
                jPanel1Layout.setVerticalGroup(
                        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(totalItem, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(totalLabel)
                                .addGap(0, 0, Short.MAX_VALUE))
                );

                saveTransactionButton.setBackground(new java.awt.Color(0, 0, 255));
                saveTransactionButton.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
                saveTransactionButton.setForeground(new java.awt.Color(255, 255, 255));
                saveTransactionButton.setText("Simpan Transaksi");
                saveTransactionButton.setToolTipText("");
                saveTransactionButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
                saveTransactionButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                saveTransactionButtonActionPerformed(evt);
                        }
                });

                javax.swing.GroupLayout addPanelLayout = new javax.swing.GroupLayout(addPanel);
                addPanel.setLayout(addPanelLayout);
                addPanelLayout.setHorizontalGroup(
                        addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(addPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(distributorDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(transactionDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(titleLabel1)
                                        .addComponent(itemDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(addPanelLayout.createSequentialGroup()
                                                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(saveTransactionButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                                .addContainerGap())))
                );
                addPanelLayout.setVerticalGroup(
                        addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(addPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(titleLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(addPanelLayout.createSequentialGroup()
                                                .addComponent(transactionDetail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(distributorDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(itemDetail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(addPanelLayout.createSequentialGroup()
                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 653, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(saveTransactionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(26, Short.MAX_VALUE))
                );

                mainPanel.add(addPanel, "card2");

                add(mainPanel, "card2");
        }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        mainPanel.removeAll();
	mainPanel.repaint();
	mainPanel.revalidate();
	
        mainPanel.add(addPanel);
	mainPanel.repaint();
	mainPanel.revalidate();
	
	loadDataCart();
	setDate();
	orderId.setText(service.number());
	
	    if (addButton.getText().equals("Ubah")) {
		    dataTable();
		   
	    }
	    modelDetailCheckin detailCheckin = new modelDetailCheckin();
	    serviceDetailCheckin.sumItem(detailCheckin);
	    totalItem.setText(String.valueOf( detailCheckin.getSubTotalItem()));
    }//GEN-LAST:event_addButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
	    String cancelButtonString = cancelButton.getText();
	    
	    if (cancelButtonString.equals("Batal")) {
		panelDisplay();
		serviceDetailCart.deleteAllCart();
		loadData();
	    }else{
		    defaultButton();  
		    clearField();
		
	    }
    }//GEN-LAST:event_cancelButtonActionPerformed

        private void cancelButtonDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonDetailActionPerformed
               panelDisplay();
	       loadData();
//	       resetForm();
        }//GEN-LAST:event_cancelButtonDetailActionPerformed

        private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
               int index = itemTableCheckin.getSelectedRow();
//	       String noCheckin = itemTableCheckin.getValueAt(index, 1).toString();
//	       modelItemCheckin itemCheckin = new modelItemCheckin();
	       if (index!=-1){
		       modelItemCheckin itemCheckin = tabelModelCheckin.getData(itemTableCheckin.convertRowIndexToModel(index));
		       if (JOptionPane.showConfirmDialog(null, "Apakah ingin menghapus data ini ?","Konfirmasi hapus data",JOptionPane.OK_CANCEL_OPTION)==JOptionPane.OK_OPTION) {
			       service.deteleTransaction(itemCheckin);
			       modelDetailCheckin detailCheckin= new modelDetailCheckin();
//			       serviceDetailCheckin.deleteDetailTransaction();
			       tabelModelCheckin.deleteItem(index);
			       loadData();
			       resetForm();
			       
		       }else{
			       JOptionPane.showMessageDialog(null, "data gagal dihapus");
		       }
	       }
	        panelDisplay();
				panelDetailCheckin.setVisible(false);
				loadData();
        }//GEN-LAST:event_deleteButtonActionPerformed

        private void itemTableCheckinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemTableCheckinMouseClicked
                int row = itemTableCheckin.getSelectedRow();
		String id = itemTableCheckin.getValueAt(row, 1).toString();
		String status = itemTableCheckin.getValueAt(row, 6).toString();
		
		panelDetailCheckin.setVisible(true);
		List<modelDetailCheckin> list =serviceDetailCheckin.getItem(id);
		tabelModelDetail.setData( list);
		
		modelIncomingItems incomingItems = new modelIncomingItems();
		incomingItems.setNoCheckin(id);
		
		if ((servIncomingItems.checkOrder(incomingItems )&& (status.equals("Barang telah diterima")))) {
			cancelButtonDetail.setVisible(true);
			printButton.setVisible(false);
			addButton.setVisible(false);
			deleteButton.setVisible(false);
		}else if (servIncomingItems.checkOrderDeleted(incomingItems)) {
			cancelButtonDetail.setVisible(true);
			printButton.setVisible(false);
			addButton.setVisible(false);
			deleteButton.setVisible(false);
		}else if (servIncomingItems.checkOrder(incomingItems )) {
			cancelButtonDetail.setVisible(true);
			printButton.setVisible(true);
			addButton.setVisible(false);
			deleteButton.setVisible(false);
		}else{
			addButton.setVisible(true);
			if (addButton.getText().equals("Tambah")) {
			addButton.setText("Ubah");
		}
			deleteButton.setVisible(true);
			cancelButtonDetail.setVisible(true);
			saveTransactionButton.setText("Perbarui Transaksi");
			printButton.setVisible(true);
		}
		
		
		
		
        }//GEN-LAST:event_itemTableCheckinMouseClicked

        private void selectItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectItemActionPerformed
//                boolean closable= true;
//		dataItemList dataItem = new dataItemList(null,closable);
//		dataItem.setVisible(true);
//		
//		listItemCode.setText(dataItem.typeItems.getCodeType());
//		typeItemName.setText(dataItem.typeItems.getNameType());
//
//		itemName.requestFocus();
//                String checkField = listItemCode.getText();
//                if (!checkField.equals("")) {
//                enableField();
//            }
		
		

		
        }//GEN-LAST:event_selectItemActionPerformed

    private void priceItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceItemActionPerformed

        private void itemTableDetailCheckinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemTableDetailCheckinMouseClicked
                // TODO add your handling code here:
        }//GEN-LAST:event_itemTableDetailCheckinMouseClicked

        private void closeLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeLabelMouseClicked
                // TODO add your handling code here:
                panelDisplay();
                panelDetailCheckin.setVisible(false);
                loadData();
        }//GEN-LAST:event_closeLabelMouseClicked

        private void distributorChooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_distributorChooseActionPerformed
               chooseDistributor();	       
        }//GEN-LAST:event_distributorChooseActionPerformed

        private void itemChooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemChooseActionPerformed
		itemChoose();
		itemTotal.setEnabled(true);
		itemTotal.requestFocus();
		updateSubTotal();
        }//GEN-LAST:event_itemChooseActionPerformed

        private void add_Button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_Button1ActionPerformed
		String buttonText= add_Button1.getText();
		 
		if (buttonText.equals("Tambah")) {
			validasiInput();
			saveMethod();
		}else{
			renewData();
			
		}
		
		
        }//GEN-LAST:event_add_Button1ActionPerformed

        private void itemTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemTotalActionPerformed
                
        }//GEN-LAST:event_itemTotalActionPerformed

        private void itemTotalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemTotalKeyTyped
               char c = evt.getKeyChar();
		if (!Character.isDigit(c)) {
		    evt.consume(); // Mencegah karakter non-angka dimasukkan
		    return;
		}
		
        }//GEN-LAST:event_itemTotalKeyTyped

        private void itemTotalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemTotalKeyReleased
               updateSubTotal();
        }//GEN-LAST:event_itemTotalKeyReleased

        private void tableShoppingCartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableShoppingCartMouseClicked
                int row = tableShoppingCart.getSelectedRow();
		
		String code = (String) tableShoppingCart.getValueAt(row, 1);
		String distri = (String )tableModelShoppingCart.getValueAt(row, 7);
		
		itemCode.setText(tableShoppingCart.getModel().getValueAt(row, 1).toString());
		itemName.setText(tableShoppingCart.getModel().getValueAt(row, 2).toString());
		itemUnit.setText(tableShoppingCart.getModel().getValueAt(row, 3).toString());
		itemPrice.setText(tableShoppingCart.getModel().getValueAt(row, 4).toString());
		itemTotal.setText(tableShoppingCart.getModel().getValueAt(row, 5).toString());
		itemSubTotal.setText(tableShoppingCart.getModel().getValueAt(row, 6).toString());
		modelShoppingCart shoppingCart = serviceDetailCart.getById(code,distri);
		
		distributorId.setText(shoppingCart.getDistributor().getDistributorId());
		distributorName.setText(shoppingCart.getDistributor().getDistributorName());
		
		itemTotal.setEnabled(true);
		itemTotal.requestFocus();
		add_Button1.setText("Ubah");
		clearButton.setText("Hapus");
		cancelButton.setText("Batal ");
		
		
        }//GEN-LAST:event_tableShoppingCartMouseClicked

        private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
               String checkClearButton = clearButton.getText();
	       if (checkClearButton.equals("Bersihkan")) {
			clearField();
		}else{
		     deleteCart();
		     defaultButton();  
	       }
        }//GEN-LAST:event_clearButtonActionPerformed

        private void itemPriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemPriceKeyPressed
               
        }//GEN-LAST:event_itemPriceKeyPressed

        private void itemPriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemPriceKeyReleased
               updateSubTotal();
        }//GEN-LAST:event_itemPriceKeyReleased

        private void saveTransactionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveTransactionButtonActionPerformed
		String buttonCheck = saveTransactionButton.getText();
		
		if (buttonCheck.equals("Simpan Transaksi")) {
			saveTransaction();
		}else{
			updateTransaction();
			panelDetailCheckin.setVisible(false);
		}
		mainPanel.removeAll();
			mainPanel.repaint();
			mainPanel.revalidate();

			mainPanel.add(dataPanel);
			mainPanel.repaint();
			mainPanel.revalidate();
			loadData();
        }//GEN-LAST:event_saveTransactionButtonActionPerformed

        private void searchTransactionListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTransactionListActionPerformed
                // TODO add your handling code here:
        }//GEN-LAST:event_searchTransactionListActionPerformed

        private void searchTransactionListKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTransactionListKeyReleased
             searchTransaction();
	     panelDetailCheckin.setVisible(false);
        }//GEN-LAST:event_searchTransactionListKeyReleased

        private void searchTransactionListKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTransactionListKeyTyped
                   
        }//GEN-LAST:event_searchTransactionListKeyTyped

        private void searchTransactionListFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTransactionListFocusGained
                String checkText = searchTransactionList.getText();
		if (checkText.equals("Cari Transaksi")) {
			searchTransactionList.setText("");
			searchTransactionList.setForeground(java.awt.Color.black);
			searchTransactionList.setFont(new java.awt.Font("Segoe UI", 0, 12)); // 
		}
        }//GEN-LAST:event_searchTransactionListFocusGained

        private void searchTransactionListFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTransactionListFocusLost
               String checkText = searchTransactionList.getText();
	       if (checkText.equals("")) {
			searchTransactionList.setText("Cari Transaksi");
			searchTransactionList.setForeground(java.awt.Color.gray);
			searchTransactionList.setFont(new java.awt.Font("Segoe UI", 2, 12)); // 
		}
        }//GEN-LAST:event_searchTransactionListFocusLost

        private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
		int row = itemTableCheckin.getSelectedRow();
		String id = itemTableCheckin.getValueAt(row, 1).toString();
		
		modelIncomingItems incomingItems = new modelIncomingItems();
		incomingItems.setNoCheckin(id);
		
		if (servIncomingItems.checkOrder(incomingItems)) {
			printDeliveryOrder();
		}else{
				int result = JOptionPane.showConfirmDialog(null, "Cetak surat jalan akan mengirimkan data pesanan ke bagian admin", "Konfirmasi cetak", JOptionPane.YES_NO_OPTION);
			if (result == JOptionPane.YES_OPTION) {
			printDeliveryOrder();
			sendToAdmin();
			deleteButton.setVisible(false);
			addButton.setVisible(false);
		}
	}

        }//GEN-LAST:event_printButtonActionPerformed

 private void panelDisplay(){
	
	mainPanel.removeAll();
	mainPanel.add(new transactionItem(id));
        mainPanel.repaint();
        mainPanel.revalidate();
}


private void disableField(){
	orderId.setEnabled(false);
	dateField.setEnabled(false);
	distributorId.setEnabled(false);
	distributorName.setEnabled(false);
	itemCode.setEnabled(false);
	itemName.setEnabled(false);
	itemUnit.setEnabled(false);
	itemPrice.setEnabled(false);
	itemSubTotal.setEnabled(false);
	itemTotal.setEnabled(false);
	
}


        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JButton addButton;
        private javax.swing.JPanel addPanel;
        private javax.swing.JButton add_Button1;
        private javax.swing.JButton cancelButton;
        private javax.swing.JButton cancelButtonDetail;
        private javax.swing.JButton clearButton;
        private javax.swing.JLabel closeLabel;
        private javax.swing.JPanel dataPanel;
        private javax.swing.JTextField dateField;
        private javax.swing.JButton deleteButton;
        private javax.swing.JButton distributorChoose;
        private javax.swing.JPanel distributorDetail;
        private javax.swing.JPanel distributorField;
        private javax.swing.JTextField distributorId;
        private javax.swing.JTextField distributorName;
        private javax.swing.JButton itemChoose;
        private javax.swing.JTextField itemCode;
        private javax.swing.JPanel itemDetail;
        private javax.swing.JPanel itemDetails;
        private javax.swing.JPanel itemField;
        private javax.swing.JTextField itemName;
        private javax.swing.JTextField itemPrice;
        private javax.swing.JTextField itemSubTotal;
        private javax.swing.JTable itemTableCheckin;
        private javax.swing.JTable itemTableDetailCheckin;
        private javax.swing.JTextField itemTotal;
        private javax.swing.JTextField itemUnit;
        private javax.swing.JLabel jLabel2;
        private javax.swing.JPanel jPanel1;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JScrollPane jScrollPane2;
        private javax.swing.JScrollPane jScrollPane3;
        private javax.swing.JScrollPane jScrollPane4;
        private javax.swing.JLabel labelDateOrder;
        private javax.swing.JLabel labelDistributor;
        private javax.swing.JLabel labelDistributorId;
        private javax.swing.JLabel labelDistributorName;
        private javax.swing.JLabel labelItem;
        private javax.swing.JLabel labelItemCode;
        private javax.swing.JLabel labelItemName;
        private javax.swing.JLabel labelItemPrice;
        private javax.swing.JLabel labelItemSubTotal;
        private javax.swing.JLabel labelItemTotal;
        private javax.swing.JLabel labelItemUnit;
        private javax.swing.JLabel labelOrder;
        private javax.swing.JPanel mainPanel;
        private javax.swing.JTextField orderId;
        private javax.swing.JPanel panelDetailCheckin;
        private javax.swing.JButton printButton;
        private javax.swing.JButton saveTransactionButton;
        private javax.swing.JTextField searchTransactionList;
        private javax.swing.JTable tableShoppingCart;
        private javax.swing.JLabel titleLabel;
        private javax.swing.JLabel titleLabel1;
        private javax.swing.JLabel titleLabel2;
        private javax.swing.JLabel totalItem;
        private javax.swing.JLabel totalLabel;
        private javax.swing.JPanel transactionDetail;
        // End of variables declaration//GEN-END:variables

	
	private void loadData(){
//	deleteButton.setVisible(false);
//	cancelButtonDetail.setVisible(false);
	List<modelItemCheckin> list =service.getItem();
	tabelModelCheckin.setData(list);
//	
}
	
	private void loadDataCart(){
	List<modelShoppingCart> list =serviceDetailCart.getItem();
	tableModelShoppingCart.setData(list);
	
}
	
	private void setDate(){
		Locale locale = new Locale("id", "ID");
		java.util.Date orderDateAutomatic = new java.util.Date();
		java.text.SimpleDateFormat dateOrder = new java.text.SimpleDateFormat("dd MMMM yyyy",locale);
		dateField.setText(dateOrder.format(orderDateAutomatic));
	}
	

	private void dataTable(){
		dataPanel.setVisible(false);
		addPanel.setVisible(true);
		
//		int row = itemTableCheckin.getSelectedRow();
		titleLabel1.setText("Perbarui Transaksi Barang");
		editTransaction();
	}
	
	private void saveMethod(){
		String distriId = distributorId.getText();
		String distriName = distributorName.getText();
	       String code = itemCode.getText();
	       String nameItem = itemName.getText();
	        String unit = itemUnit.getText();
	       int price = Integer.parseInt(itemPrice.getText());
	       int total = Integer.parseInt(itemTotal.getText());
	       int subTotal = Integer.parseInt(itemSubTotal.getText());
	       String status = "Barang dalam pemesanan";
	      
	       
	       modelItem items = new modelItem();
	       modelDetailCheckin detailCheckin = new modelDetailCheckin();
	       modelShoppingCart cart = new modelShoppingCart();
	       modelDistributor distributor = new modelDistributor();
	       
	       distributor.setDistributorId(distriId);
	       distributor.setDistributorName(distriName);
	       
	       items.setItemCode(code);
	       items.setItemName(nameItem);
	       items.setItemUnit(unit);
	       items.setPrice(price);
	       
	       detailCheckin.setTotalItem(total);
	       detailCheckin.setSubTotalItem(subTotal);
	       detailCheckin.setStatus(status);
	       
	       
	       cart.setDetaileCheckin(detailCheckin);
	       cart.setItem(items);
	       cart.setDistributor(distributor);
	       
	       serviceDetailCart.addItem(cart);
	       serviceDetailCheckin.sumItem(detailCheckin);
	       totalItem.setText(String.valueOf( detailCheckin.getSubTotalItem()));
	       
	       loadDataCart();
	       
	       if(JOptionPane.showConfirmDialog(this, "Mau tambah barang ?","Konfirmasi",JOptionPane.YES_NO_OPTION)==JOptionPane.YES_NO_OPTION){
		resetForm();
		chooseDistributor();
	       
	       itemTotal.setEnabled(false);
	       distributorChoose.requestFocus();
	       }else{
		       resetForm();
		        distributorChoose.requestFocus();
	       }
	}

	private void itemChoose(){
		boolean closable= true;
		listItem itemList = new listItem(null,closable);
		itemList.setVisible(true);
		
		itemCode.setText(itemList.itemSetterGetter.getItemCode());
		itemName.setText(itemList.itemSetterGetter.getItemName());
		itemUnit.setText(itemList.itemSetterGetter.getItemUnit());
		itemPrice.setText( String.valueOf(itemList.itemSetterGetter.getPrice()));
		
	}


	private void resetForm(){
		distributorId.setText("");
		distributorName.setText("");
		itemCode.setText("");
		itemName.setText("");
		itemUnit.setText("");
		itemPrice.setText("");
		itemTotal.setText("");
		itemSubTotal.setText("");
	}

	private void updateSubTotal() {
	String totalText = itemTotal.getText();
	if (totalText.isEmpty()) {
	    itemSubTotal.setText("0");
	    return;
	}

	long price = Long.parseLong(itemPrice.getText());
	long totalPrice = Long.parseLong(totalText);
	long subTotalPrice = price * totalPrice;
	itemSubTotal.setText(Long.toString(subTotalPrice));
	}
	
	private boolean validasiInput(){
		boolean input=false;
		
		
		if (distributorId.getText().trim().isEmpty()) {
			JOptionPane.showMessageDialog(null, "Silihkan Pilih Distributor terlebih dahulu");
			chooseDistributor();
		}else if (itemCode.getText().trim().isEmpty()){
			JOptionPane.showMessageDialog(null, "Silihkan Pilih barang terlebih dahulu");
			itemChoose();
			itemTotal.setEnabled(true);
			itemTotal.requestFocus();
		}else if (itemTotal.getText().trim().isEmpty()){
			JOptionPane.showMessageDialog(null, "Masukan jumlah barang yang ingin dibeli");
			itemTotal.requestFocus();
			
		}else{
			input=true;
		}
		
		return input;
		
	}


	private void chooseDistributor(){
		boolean closable= true;
			listDistributor distributorLis = new listDistributor(null,closable);
			distributorLis.setVisible(true);

			distributorId.setText(distributorLis.distributorSetterGetter.getDistributorId());
			distributorName.setText(distributorLis.distributorSetterGetter.getDistributorName());
		
		
	}
	
	private void deleteCart(){
		int index = tableShoppingCart.getSelectedRow();
	       
	       if (index!=-1){
		       modelShoppingCart shoppingCart = tableModelShoppingCart.getData(tableShoppingCart.convertRowIndexToModel(index));
		       if (JOptionPane.showConfirmDialog(null, "Apakah ingin menghapus data ini ?","Konfirmasi hapus data",JOptionPane.OK_CANCEL_OPTION)==JOptionPane.OK_OPTION) {
			       serviceDetailCart.deleteCart(shoppingCart);
			       tableModelShoppingCart.deleteItem(index);
			       
			       modelDetailCheckin detailCheckin = new modelDetailCheckin();
			       serviceDetailCheckin.sumItem(detailCheckin);
			       totalItem.setText(String.valueOf( detailCheckin.getSubTotalItem()));
			       
			       
			       loadDataCart();
			       resetForm();
		       }else{
			       JOptionPane.showMessageDialog(null, "data gagal dihapus");
		       }
	       }
	}
	
	private void renewData(){
		int index = tableShoppingCart.getSelectedRow();
		if (index!=-1){ 
			modelShoppingCart shoppingCart = tableModelShoppingCart.getData(tableShoppingCart.convertRowIndexToModel(index));
			
			
			if (!validasiInput()){
				add_Button1.setText("Ubah");
				cancelButton.setText("Hapus");
			}else{
				String distributorIdString = distributorId.getText();
				String distributorNameString = distributorName.getText();
				modelDetailCheckin detailCheckin = new modelDetailCheckin();
                                modelDetailCheckin originalTotalItemCart = new modelDetailCheckin();
				 
				String codeItem = itemCode.getText();
				String nameItem = itemName.getText();
				String unit	= itemUnit.getText();
				int price	= Integer.parseInt(itemPrice.getText());
				int total	= Integer.parseInt(itemTotal.getText());
				int subTotal	= Integer.parseInt(itemSubTotal.getText());

				modelItem item = new modelItem();
				modelItem originalItemCode = new modelItem();
				modelDistributor distributor = new modelDistributor();
				modelDistributor originalDistributor = new modelDistributor();
				
				String originalDistributorId = shoppingCart.getDistributor().getDistributorId();
				String originalItem = shoppingCart.getItem().getItemCode();
                                int totalOri = shoppingCart.getDetaileCheckin().getTotalItem();
				
				
				originalDistributor.setDistributorId(originalDistributorId);
				originalItemCode.setItemCode(originalItem);
                                originalTotalItemCart.setTotalItem(totalOri);
				
				item.setItemCode(codeItem);
				item.setItemName(nameItem);
				item.setItemUnit(unit);
				item.setPrice(price);
				
				distributor.setDistributorId(distributorIdString);
				distributor.setDistributorName(distributorNameString);
				
				detailCheckin.setTotalItem(total);
				detailCheckin.setSubTotalItem(subTotal);
				
				shoppingCart.setItem(item);
				shoppingCart.setDetaileCheckin(detailCheckin);
				shoppingCart.setOriginalDistributor(originalDistributor);
				shoppingCart.setOriginalItem(originalItemCode);
				shoppingCart.setDistributor(distributor);
                                shoppingCart.setOriginalTotal(originalTotalItemCart);
				
				serviceDetailCart.renewItem(shoppingCart);
				defaultButton();
				tableModelShoppingCart.renewItem(index, shoppingCart);
				serviceDetailCheckin.sumItem(detailCheckin);
				totalItem.setText(String.valueOf( detailCheckin.getSubTotalItem()));
				loadDataCart();
				resetForm();
//				panelDisplay();
			}
		}
	}
	
	private void defaultButton(){
		cancelButton.setText("Batal");
		add_Button1.setText("Tambah");
		clearButton.setText("Bersihkan");
	}
	
	private void clearField(){
		distributorId.setText("");
		distributorName.setText("");
		itemCode.setText("");
		itemName.setText("");
		itemUnit.setText("");
		itemPrice.setText("");
		itemTotal.setText("");
		itemSubTotal.setText("");
	}
	
	private void saveTransaction(){
		String nameTransaction = JOptionPane.showInputDialog(null, "Masukkan Nama Transaksi:", "Nama Transaksi", JOptionPane.PLAIN_MESSAGE);
		
			String orderIdString = orderId.getText();
			String dateString = dateField.getText();
			String idEmployee = id;
			String adminStaff = "Belum diterima";
			String dateReceived = "none";
			String statusTransaction = "Surat Jalan Belum dicetak";
			int total = Integer.parseInt(totalItem.getText());
//			int total = Integer.parseInt(totalItem.getText());
			
			
			modelItem item = new modelItem();
			modelItemCheckin itemCheckin = new modelItemCheckin();
			modelDetailCheckin detailCheckin =  new modelDetailCheckin();
			modelDistributor distributor = new modelDistributor();
			modelEmployee employee = new modelEmployee();
			modelEmployee employee2 = new modelEmployee();
			
			itemCheckin.setNoCheckin(orderIdString);
			itemCheckin.setDateCheckin(dateString);
			
			itemCheckin.setTransactionName(nameTransaction);
			itemCheckin.setTotalCheckin(total);
			employee.setIdEmployee(idEmployee);
			itemCheckin.setEmployee(employee);
			itemCheckin.setStatusTransaction(statusTransaction);
			
			detailCheckin.setItems(item);
			detailCheckin.setItemCheckin(itemCheckin);
			detailCheckin.setDistributor(distributor);
			
			employee2.setIdEmployee(adminStaff);
			detailCheckin.setEmployee(employee2);
			detailCheckin.setDateReceived(dateReceived);
			
			service.addTransaction(itemCheckin);
			serviceDetailCheckin.addDetailTransaction(detailCheckin);
			tabelModelCheckin.addItem(itemCheckin);
			
			serviceDetailCart.deleteAllCart();
		
	}
	
	
	private void editTransaction(){
		int row = itemTableCheckin.getSelectedRow();
		String orderIdString = (String) itemTableCheckin.getValueAt(row, 1);
		String dateString = (String) itemTableCheckin.getValueAt(row, 2);
		List <modelShoppingCart> listCart =  serviceDetailCheckin.getById(orderIdString);
			orderId.setText(orderIdString);
			dateField.setText(dateString);
			loadDataCart();
			
	}
	
	private void updateTransaction(){
		int index = itemTableCheckin.getSelectedRow();
		if (index!=-1){
			modelItemCheckin itemCheckinTable = tabelModelCheckin.getData(itemTableCheckin.convertRowIndexToModel(index));
			
			
		String nameTransaction = JOptionPane.showInputDialog(null, "Masukkan Nama Transaksi:", "Nama Transaksi", JOptionPane.PLAIN_MESSAGE);
		
			String orderIdString = orderId.getText();
			String dateString = dateField.getText();
			String idEmployee = id;
			String adminStaff = "DUMMY";
			String dateReceived = "-";
			int total = Integer.parseInt(totalItem.getText());
//			
			
			
			modelItem item = new modelItem();
			modelItemCheckin itemCheckin = new modelItemCheckin();
			modelDetailCheckin detailCheckin =  new modelDetailCheckin();
			modelDistributor distributor = new modelDistributor();
			modelEmployee employee = new modelEmployee();
			modelEmployee employee2 = new modelEmployee();
			
			itemCheckin.setNoCheckin(orderIdString);
			itemCheckin.setDateCheckin(dateString);
			
			itemCheckin.setTransactionName(nameTransaction);
			itemCheckin.setTotalCheckin(total);
			employee.setIdEmployee(idEmployee);
			itemCheckin.setEmployee(employee);
			
			detailCheckin.setItems(item);
			detailCheckin.setItemCheckin(itemCheckin);
			detailCheckin.setDistributor(distributor);
			
			employee2.setIdEmployee(adminStaff);
			detailCheckin.setEmployee(employee2);
			detailCheckin.setDateReceived(dateReceived);
				
			service.updateTransaction(itemCheckin);
			serviceDetailCheckin.deleteTransaction(detailCheckin);
			serviceDetailCheckin.addDetailTransaction(detailCheckin);
			tabelModelCheckin.renewItem(index,itemCheckin);
			
			serviceDetailCart.deleteAllCart();
			loadData();
			
		
	}
		}
	
	private void searchTransaction(){
		List <modelItemCheckin> list = service.Search(searchTransactionList.getText());
		tabelModelCheckin.setData(list);
	}
	
	private void printDeliveryOrder(){
		 int row = itemTableCheckin.getSelectedRow();
		String no = itemTableCheckin.getModel().getValueAt(row, 1).toString();
		reportService.deliveryOrder(no);
	}
	
	private void sendToAdmin(){
		int row = itemTableCheckin.getSelectedRow();
		String orderId = itemTableCheckin.getModel().getValueAt(row, 1).toString();
		String status = "Barang dalam pemesanan";
		
		modelItemCheckin itemCheckin = new modelItemCheckin();
		modelIncomingItems incomingItems = new modelIncomingItems();
		
		incomingItems.setNoCheckin(orderId);
		itemCheckin.setNoCheckin(orderId);
		itemCheckin.setStatusTransaction(status);
		service.updateStatusTransaction(itemCheckin);
		
		servIncomingItems.sendOrder(incomingItems);
		loadData();
	}
}



