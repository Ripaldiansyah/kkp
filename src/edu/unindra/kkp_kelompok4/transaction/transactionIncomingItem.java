package edu.unindra.kkp_kelompok4.transaction;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

import edu.unindra.kkp_kelompok4.Services.serviceCheckIn;
import edu.unindra.kkp_kelompok4.Services.serviceDetailCartCheckin;
import edu.unindra.kkp_kelompok4.Services.serviceDetailCheckin;
import edu.unindra.kkp_kelompok4.Services.serviceDetailIncomingItems;
import edu.unindra.kkp_kelompok4.Services.serviceIncomingItems;
import edu.unindra.kkp_kelompok4.Services.serviceReport;
import edu.unindra.kkp_kelompok4.TableModel.tableModelDetailCheckin;
import edu.unindra.kkp_kelompok4.TableModel.tableModelDetailIncomingItems;
import edu.unindra.kkp_kelompok4.TableModel.tableModelIncomingItems;
import edu.unindra.kkp_kelompok4.dao.DAO_CheckIn;
import edu.unindra.kkp_kelompok4.dao.DAO_DetailCartCheckIn;
import edu.unindra.kkp_kelompok4.dao.DAO_DetailCheckin;
import edu.unindra.kkp_kelompok4.dao.DAO_DetailIncomingItems;
import edu.unindra.kkp_kelompok4.dao.DAO_IncomingItems;
import edu.unindra.kkp_kelompok4.dao.DAO_Report;
import edu.unindra.kkp_kelompok4.model.*;
import java.util.List;
import java.util.Locale;
import javax.swing.JOptionPane;

/**
 *
 * @author ripal
 */
public class transactionIncomingItem extends javax.swing.JPanel {

    private serviceIncomingItems service = new DAO_IncomingItems();
    private serviceDetailIncomingItems servDetailIncomingItems = new DAO_DetailIncomingItems();
    private serviceReport reportService = new DAO_Report();
    private serviceCheckIn servCheckIn = new DAO_CheckIn();
    
    private tableModelIncomingItems ModelIncomingItems = new tableModelIncomingItems();
    private tableModelDetailIncomingItems ModelDetailIncomingItems = new tableModelDetailIncomingItems();
    
    String  id ;
    String dateString,statusCheck;
    public transactionIncomingItem(String idEmployee) {
	    initComponents();
	 id = idEmployee;
	tableIncomingItems.setModel(ModelIncomingItems);
	tableDetailIncomingItems.setModel(ModelDetailIncomingItems);
	loadData();
//	loadDataCart();
	panelDetailCheckin.setVisible(false);
	
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                mainPanel = new javax.swing.JPanel();
                dataPanel = new javax.swing.JPanel();
                submitButton = new javax.swing.JButton();
                deleteButton = new javax.swing.JButton();
                cancelButtonDetail = new javax.swing.JButton();
                jScrollPane1 = new javax.swing.JScrollPane();
                tableIncomingItems = new javax.swing.JTable();
                titleLabel2 = new javax.swing.JLabel();
                panelDetailCheckin = new javax.swing.JPanel();
                jScrollPane3 = new javax.swing.JScrollPane();
                tableDetailIncomingItems = new javax.swing.JTable();
                titleLabel = new javax.swing.JLabel();
                closeLabel = new javax.swing.JLabel();
                subButton = new javax.swing.JButton();
                searchTransactionList = new javax.swing.JTextField();
                jLabel2 = new javax.swing.JLabel();

                setLayout(new java.awt.CardLayout());

                mainPanel.setLayout(new java.awt.CardLayout());

                dataPanel.setBackground(new java.awt.Color(255, 255, 255));

                submitButton.setBackground(new java.awt.Color(102, 51, 255));
                submitButton.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
                submitButton.setForeground(new java.awt.Color(255, 255, 255));
                submitButton.setText("Konfirmasi semua");
                submitButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                submitButtonActionPerformed(evt);
                        }
                });

                deleteButton.setBackground(new java.awt.Color(255, 0, 0));
                deleteButton.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
                deleteButton.setForeground(new java.awt.Color(255, 255, 255));
                deleteButton.setText("Hapus");
                deleteButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                deleteButtonActionPerformed(evt);
                        }
                });

                cancelButtonDetail.setBackground(new java.awt.Color(0, 204, 204));
                cancelButtonDetail.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
                cancelButtonDetail.setForeground(new java.awt.Color(255, 255, 255));
                cancelButtonDetail.setText("Batal");
                cancelButtonDetail.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                cancelButtonDetailActionPerformed(evt);
                        }
                });

                tableIncomingItems.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {
                                {null, null, null, null},
                                {null, null, null, null},
                                {null, null, null, null},
                                {null, null, null, null}
                        },
                        new String [] {
                                "Title 1", "Title 2", "Title 3", "Title 4"
                        }
                ));
                tableIncomingItems.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                tableIncomingItemsMouseClicked(evt);
                        }
                });
                jScrollPane1.setViewportView(tableIncomingItems);

                titleLabel2.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
                titleLabel2.setText("Data Barang Masuk");

                tableDetailIncomingItems.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {
                                {null, null, null, null},
                                {null, null, null, null},
                                {null, null, null, null},
                                {null, null, null, null}
                        },
                        new String [] {
                                "Title 1", "Title 2", "Title 3", "Title 4"
                        }
                ));
                tableDetailIncomingItems.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                tableDetailIncomingItemsMouseClicked(evt);
                        }
                });
                jScrollPane3.setViewportView(tableDetailIncomingItems);

                titleLabel.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
                titleLabel.setText("Detail Barang Masuk");

                closeLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
                closeLabel.setText("X");
                closeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                closeLabelMouseClicked(evt);
                        }
                });

                subButton.setBackground(new java.awt.Color(102, 51, 255));
                subButton.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
                subButton.setForeground(new java.awt.Color(255, 255, 255));
                subButton.setText("Konfirmasi");
                subButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                subButtonActionPerformed(evt);
                        }
                });

                javax.swing.GroupLayout panelDetailCheckinLayout = new javax.swing.GroupLayout(panelDetailCheckin);
                panelDetailCheckin.setLayout(panelDetailCheckinLayout);
                panelDetailCheckinLayout.setHorizontalGroup(
                        panelDetailCheckinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelDetailCheckinLayout.createSequentialGroup()
                                .addComponent(titleLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(closeLabel)
                                .addGap(30, 30, 30))
                        .addGroup(panelDetailCheckinLayout.createSequentialGroup()
                                .addGroup(panelDetailCheckinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(panelDetailCheckinLayout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(subButton)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );
                panelDetailCheckinLayout.setVerticalGroup(
                        panelDetailCheckinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelDetailCheckinLayout.createSequentialGroup()
                                .addGroup(panelDetailCheckinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(closeLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(subButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );

                searchTransactionList.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
                searchTransactionList.setForeground(java.awt.Color.gray);
                searchTransactionList.setText("Cari Transaksi");
                searchTransactionList.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
                searchTransactionList.addFocusListener(new java.awt.event.FocusAdapter() {
                        public void focusGained(java.awt.event.FocusEvent evt) {
                                searchTransactionListFocusGained(evt);
                        }
                        public void focusLost(java.awt.event.FocusEvent evt) {
                                searchTransactionListFocusLost(evt);
                        }
                });
                searchTransactionList.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                searchTransactionListActionPerformed(evt);
                        }
                });
                searchTransactionList.addKeyListener(new java.awt.event.KeyAdapter() {
                        public void keyReleased(java.awt.event.KeyEvent evt) {
                                searchTransactionListKeyReleased(evt);
                        }
                        public void keyTyped(java.awt.event.KeyEvent evt) {
                                searchTransactionListKeyTyped(evt);
                        }
                });

                jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/unindra/kkp_kelompok4/resource/image/HomeApp/searchItems.png"))); // NOI18N

                javax.swing.GroupLayout dataPanelLayout = new javax.swing.GroupLayout(dataPanel);
                dataPanel.setLayout(dataPanelLayout);
                dataPanelLayout.setHorizontalGroup(
                        dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(dataPanelLayout.createSequentialGroup()
                                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(titleLabel2)
                                        .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addGroup(dataPanelLayout.createSequentialGroup()
                                                        .addContainerGap()
                                                        .addComponent(submitButton)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(cancelButtonDetail)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jLabel2)
                                                        .addGap(8, 8, 8)
                                                        .addComponent(searchTransactionList, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(dataPanelLayout.createSequentialGroup()
                                                        .addGap(10, 10, 10)
                                                        .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(panelDetailCheckin, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(25, 25, 25))
                );
                dataPanelLayout.setVerticalGroup(
                        dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(dataPanelLayout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(titleLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3)
                                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(searchTransactionList, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(dataPanelLayout.createSequentialGroup()
                                                .addGap(4, 4, 4)
                                                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(cancelButtonDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(14, 14, 14)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(panelDetailCheckin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                );

                mainPanel.add(dataPanel, "card2");

                add(mainPanel, "card2");
        }// </editor-fold>//GEN-END:initComponents

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
	int result = JOptionPane.showConfirmDialog(null, "Anda yakin barang sudah diterima semua?","Terima Barang",JOptionPane.YES_NO_OPTION);
	if (result == JOptionPane.YES_OPTION) {
		JOptionPane.showMessageDialog(null, "Barang Diterima");
	 confirmItemAll();
	 loadData();
	 panelDetailCheckin.setVisible(false);
	}
    }//GEN-LAST:event_submitButtonActionPerformed

        private void cancelButtonDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonDetailActionPerformed
               panelDisplay();
	       loadData();
        }//GEN-LAST:event_cancelButtonDetailActionPerformed

        private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
               int index = tableIncomingItems.getSelectedRow();
	       if (index!=-1){
		       modelIncomingItems incomingItems = ModelIncomingItems.getData(tableIncomingItems.convertRowIndexToModel(index));
		       if (JOptionPane.showConfirmDialog(null, "Apakah ingin menghapus transaksi ini, transaksi akan dikembalikan ke bagian gudang ?","Konfirmasi hapus data",JOptionPane.OK_CANCEL_OPTION)==JOptionPane.OK_OPTION) {
			       modelItemCheckin itemCheckin = new modelItemCheckin();
			       String id = tableIncomingItems.getValueAt(index, 1).toString();
			       String status = "Transaksi dihapus oleh Bagian Admin";
			       itemCheckin.setNoCheckin(id);
			       itemCheckin.setStatusTransaction(status);
			       servCheckIn.updateStatusTransaction(itemCheckin);
			       service.deleteTransaction(incomingItems);
			       ModelIncomingItems.deleteItem(index);
			       loadData();
			       panelDetailCheckin.setVisible(false);
			       
			       
		       }else{
			       JOptionPane.showMessageDialog(null, "data gagal dihapus");
		       }
	       }
	        panelDisplay();
				panelDetailCheckin.setVisible(false);
				loadData();
        }//GEN-LAST:event_deleteButtonActionPerformed

        private void tableIncomingItemsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableIncomingItemsMouseClicked
                int row = tableIncomingItems.getSelectedRow();
		String id = tableIncomingItems.getValueAt(row, 1).toString();
		String status = tableIncomingItems.getValueAt(row, 6).toString();
		
		if (status.equals("Barang telah diterima")) {
			cancelButtonDetail.setVisible(true);
			submitButton.setVisible(false);
			deleteButton.setVisible(false);
		}else{
			enableButton();
		}
		panelDetailCheckin.setVisible(true);
		List<modelDetailIncomingItems> list =servDetailIncomingItems.getItem(id);
		ModelDetailIncomingItems.setData(list);
		subButton.setVisible(false);
		checkTable();
		
        }//GEN-LAST:event_tableIncomingItemsMouseClicked

        private void selectItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectItemActionPerformed
		
        }//GEN-LAST:event_selectItemActionPerformed

    private void priceItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceItemActionPerformed

        private void tableDetailIncomingItemsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableDetailIncomingItemsMouseClicked
                enableSubButton();
        }//GEN-LAST:event_tableDetailIncomingItemsMouseClicked

        private void closeLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeLabelMouseClicked
                // TODO add your handling code here:
                panelDisplay();
                panelDetailCheckin.setVisible(false);
//                loadData();
        }//GEN-LAST:event_closeLabelMouseClicked

        private void searchTransactionListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTransactionListActionPerformed
                // TODO add your handling code here:
        }//GEN-LAST:event_searchTransactionListActionPerformed

        private void searchTransactionListKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTransactionListKeyReleased
//             searchTransaction();
	     panelDetailCheckin.setVisible(false);
        }//GEN-LAST:event_searchTransactionListKeyReleased

        private void searchTransactionListKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTransactionListKeyTyped
                   
        }//GEN-LAST:event_searchTransactionListKeyTyped

        private void searchTransactionListFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTransactionListFocusGained
                String checkText = searchTransactionList.getText();
		if (checkText.equals("Cari Transaksi")) {
			searchTransactionList.setText("");
			searchTransactionList.setForeground(java.awt.Color.black);
			searchTransactionList.setFont(new java.awt.Font("Segoe UI", 0, 12)); // 
		}
        }//GEN-LAST:event_searchTransactionListFocusGained

        private void searchTransactionListFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTransactionListFocusLost
               String checkText = searchTransactionList.getText();
	       if (checkText.equals("")) {
			searchTransactionList.setText("Cari Transaksi");
			searchTransactionList.setForeground(java.awt.Color.gray);
			searchTransactionList.setFont(new java.awt.Font("Segoe UI", 2, 12)); // 
		}
        }//GEN-LAST:event_searchTransactionListFocusLost

        private void subButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subButtonActionPerformed
            int confirm =    JOptionPane.showConfirmDialog(null, "Apakah Barang sudah diterima ?", "Konfirmasi Barang", JOptionPane.YES_NO_OPTION);
	    if (confirm== JOptionPane.YES_OPTION) {
		confirmItem();	
		}
        }//GEN-LAST:event_subButtonActionPerformed

 private void panelDisplay(){
	
	mainPanel.removeAll();
	mainPanel.add(new transactionIncomingItem(id));
        mainPanel.repaint();
        mainPanel.revalidate();
}


        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JButton cancelButtonDetail;
        private javax.swing.JLabel closeLabel;
        private javax.swing.JPanel dataPanel;
        private javax.swing.JButton deleteButton;
        private javax.swing.JLabel jLabel2;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JScrollPane jScrollPane3;
        private javax.swing.JPanel mainPanel;
        private javax.swing.JPanel panelDetailCheckin;
        private javax.swing.JTextField searchTransactionList;
        private javax.swing.JButton subButton;
        private javax.swing.JButton submitButton;
        private javax.swing.JTable tableDetailIncomingItems;
        private javax.swing.JTable tableIncomingItems;
        private javax.swing.JLabel titleLabel;
        private javax.swing.JLabel titleLabel2;
        // End of variables declaration//GEN-END:variables

	
	private void loadData(){
	disableButton();
	List<modelIncomingItems> list =service.getItem();
	ModelIncomingItems.setData(list);
}
	
	private void enableButton(){
		submitButton.setVisible(true);
		deleteButton.setVisible(true);
		cancelButtonDetail.setVisible(true);
	}
	
	private void disableButton(){
		submitButton.setVisible(false);
		deleteButton.setVisible(false);
		cancelButtonDetail.setVisible(false);
	}

	private void confirmItemAll() {
	int row = tableIncomingItems.getSelectedRow();
		String id = tableIncomingItems.getValueAt(row, 1).toString();
		String status = "Barang telah diterima";
		
		modelItemCheckin itemCheckin = new modelItemCheckin();
		modelDetailIncomingItems detailIncomingItems = new modelDetailIncomingItems();
		modelEmployee employee = new modelEmployee();
		itemCheckin.setNoCheckin(id);
		itemCheckin.setStatusTransaction(status);
		setDate();
		detailIncomingItems.setStatus(status);
		detailIncomingItems.setDateReceived(dateString);
		employee.setIdEmployee(this.id);
		detailIncomingItems.setEmployee(employee);
		detailIncomingItems.setNoCheckin(id);
		
		servCheckIn.confirmAll(itemCheckin);
		servDetailIncomingItems.submitDetail(detailIncomingItems);
		
	}
	
	private void confirmItem(){
		int row = tableDetailIncomingItems.getSelectedRow();
		modelIncomingItems incomingItems = new modelIncomingItems();
		modelItemCheckin itemCheckin = new modelItemCheckin();
		modelItemCheckin itemsCheckin = new modelItemCheckin();
		modelEmployee employee = new modelEmployee();
		modelDetailIncomingItems detailIncomingItems = new modelDetailIncomingItems();
		modelDistributor distributor = new modelDistributor();
		modelItem items = new modelItem();
		
		String id = tableDetailIncomingItems.getValueAt(row, 1).toString();
		String itemCode= tableDetailIncomingItems.getValueAt(row, 2).toString();
		String nameItem= tableDetailIncomingItems.getValueAt(row, 3).toString();
		String nameDistri= tableDetailIncomingItems.getValueAt(row, 7).toString();
		String distri = (String )ModelDetailIncomingItems.getValueAt(row, 7);
		String status = "Barang telah diterima";
		String statusDetail ="Barang dalam pemesanan";
		String detailStatus ="Barang terkirim sebagian";
		
		itemCheckin.setNoCheckin(id);
		itemsCheckin.setNoCheckin(id);
		setDate();
		detailIncomingItems.setStatus(status);
		detailIncomingItems.setDateReceived(dateString);
		employee.setIdEmployee(this.id);
		detailIncomingItems.setEmployee(employee);
		detailIncomingItems.setNoCheckin(id);
		
		modelDetailIncomingItems detailIncomingItem = servDetailIncomingItems.getById(id, distri, itemCode);
		String distriId = detailIncomingItem.getDistributor().getDistributorId();
		distributor.setDistributorId(distriId);
		detailIncomingItems.setDistributor(distributor); 
		
		items.setItemCode(itemCode);
		detailIncomingItems.setItems(items);
		
		servDetailIncomingItems.checkStatusConfirm(detailIncomingItems);
		
		modelDetailIncomingItems detailIncoming = new modelDetailIncomingItems();
		detailIncoming.setNoCheckin(id);
		detailIncoming.setStatus(statusDetail);
		itemCheckin.setStatusTransaction(status);
		itemsCheckin.setStatusTransaction(detailStatus);
		boolean checkStatus = service.checkOrderDetail(detailIncoming);
		
		
		if (checkStatus) {//checkStatus true, karena ketemu, disini saya balikan jadi kalo ketemu set sebagian
			servCheckIn.confirmAll(itemsCheckin);
		}
		if (!checkStatus) {//checkStatus true, karena ketemu, disini saya balikan jadi kalo ketemu set sebagian
			servCheckIn.confirmAll(itemCheckin);
		}
		subButton.setVisible(false);
		
		JOptionPane.showMessageDialog(null, "Barang "+nameItem+" dari distributor "+nameDistri+" Telah diterima");
		
		
		List<modelIncomingItems> list =service.getItem();
		ModelIncomingItems.setData(list);
		List<modelDetailIncomingItems> list2 =servDetailIncomingItems.getItem(id);
		ModelDetailIncomingItems.setData(list2);
	}
	
	private void enableSubButton(){
		int row = tableDetailIncomingItems.getSelectedRow();
		String distri = (String )ModelDetailIncomingItems.getValueAt(row, 7);
		String id = tableDetailIncomingItems.getValueAt(row, 1).toString();
		String itemCode= tableDetailIncomingItems.getValueAt(row, 2).toString();
		modelDetailIncomingItems detailIncomingItems = servDetailIncomingItems.getById(id, distri, itemCode);
		String statusDetail = detailIncomingItems.getStatus();
		
		if (statusDetail.equals("Barang dalam pemesanan")) {
			subButton.setVisible(true);
		}else{
			subButton.setVisible(false);
		}
	}
	
	private void setDate(){
		Locale locale = new Locale("id", "ID");
		java.util.Date orderDateAutomatic = new java.util.Date();
		java.text.SimpleDateFormat dateOrder = new java.text.SimpleDateFormat("dd MMMM yyyy",locale);
		dateString = (dateOrder.format(orderDateAutomatic));
	}

	private void checkTable() {
		int row = tableIncomingItems.getSelectedRow();
		statusCheck = tableIncomingItems.getValueAt(row, 6).toString();
		
	}
}



