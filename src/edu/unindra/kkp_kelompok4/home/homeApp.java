	package edu.unindra.kkp_kelompok4.home;


import com.formdev.flatlaf.FlatDarkLaf;
import com.formdev.flatlaf.FlatLightLaf;
import edu.unindra.kkp_kelompok4.Services.serviceAccountSetting;
import edu.unindra.kkp_kelompok4.Services.serviceEmployee;
import edu.unindra.kkp_kelompok4.accountSetting.accountSetting;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.awt.EventQueue;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import edu.unindra.kkp_kelompok4.cashier.Cashier;
import edu.unindra.kkp_kelompok4.dao.DAO_AccountSetting;
import edu.unindra.kkp_kelompok4.homePage.homePage;
import edu.unindra.kkp_kelompok4.master.employeeForm;
import edu.unindra.kkp_kelompok4.master.itemForm;
import edu.unindra.kkp_kelompok4.master.distributorForm;
import edu.unindra.kkp_kelompok4.master.itemTypeListForm;
import edu.unindra.kkp_kelompok4.model.modelAccountSetting;
import edu.unindra.kkp_kelompok4.model.modelLogin;
import edu.unindra.kkp_kelompok4.report.reportItem;
import edu.unindra.kkp_kelompok4.report.reportOrder;
import edu.unindra.kkp_kelompok4.report.reportOrderWareHouse;
import edu.unindra.kkp_kelompok4.report.reportPerformanceCashier;
import edu.unindra.kkp_kelompok4.report.reportTransaction;
import edu.unindra.kkp_kelompok4.transaction.transactionIncomingItem;
import edu.unindra.kkp_kelompok4.transaction.transactionItem;
import java.awt.Color;
import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;

/**
 *
 * @author fadli
 */
public final class homeApp extends javax.swing.JFrame {

    modelAccountSetting account = new modelAccountSetting();
    serviceAccountSetting service = new DAO_AccountSetting();
 String employeeNames;
    public homeApp(String idEmployee, String employeeName, String role, byte[] picture) {
	   
        initComponents();
	
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
	    
	account.setIdEmployee(idEmployee);
	
        timeLabel();
	    updateName(employeeName);
	    updateRole(role);
	labelIdEmployee.setText(idEmployee);
	updatePicture(picture);
	
	execute();
	
	
	
	
    }
    
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                panel_nav = new javax.swing.JPanel();
                labelMinimarket = new javax.swing.JLabel();
                labelIcon = new javax.swing.JLabel();
                labelTime = new javax.swing.JLabel();
                Separate = new javax.swing.JLabel();
                Seperate = new javax.swing.JLabel();
                labelDate = new javax.swing.JLabel();
                labelName = new javax.swing.JLabel();
                labelRole = new javax.swing.JLabel();
                labelIdEmployee = new javax.swing.JLabel();
                labelPicture = new javax.swing.JLabel();
                panel_side = new javax.swing.JPanel();
                menus = new javax.swing.JPanel();
                panel_content = new javax.swing.JPanel();
                panel_Utama = new javax.swing.JPanel();

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
                setPreferredSize(new java.awt.Dimension(1920, 1080));
                addWindowListener(new java.awt.event.WindowAdapter() {
                        public void windowOpened(java.awt.event.WindowEvent evt) {
                                formWindowOpened(evt);
                        }
                });

                panel_nav.setBackground(new java.awt.Color(0, 0, 255));
                panel_nav.setPreferredSize(new java.awt.Dimension(830, 70));
                panel_nav.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

                labelMinimarket.setFont(new java.awt.Font("Century Gothic", 1, 32)); // NOI18N
                labelMinimarket.setForeground(new java.awt.Color(255, 255, 255));
                labelMinimarket.setText("UD Yanti");
                panel_nav.add(labelMinimarket, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 300, -1));

                labelIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/unindra/kkp_kelompok4/resource/image/HomeApp/Shopping.png"))); // NOI18N
                panel_nav.add(labelIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 6, 92, -1));

                labelTime.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
                labelTime.setForeground(new java.awt.Color(255, 255, 255));
                labelTime.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
                labelTime.setText("00-00-0000 00:00:00");
                panel_nav.add(labelTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 30, 185, 30));

                Separate.setFont(new java.awt.Font("Candara", 1, 12)); // NOI18N
                Separate.setForeground(new java.awt.Color(255, 255, 255));
                Separate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
                Separate.setText("|");
                panel_nav.add(Separate, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 0, 10, 40));

                Seperate.setFont(new java.awt.Font("Century Gothic", 0, 48)); // NOI18N
                Seperate.setForeground(new java.awt.Color(255, 255, 255));
                Seperate.setText("|");
                panel_nav.add(Seperate, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 0, -1, -1));

                labelDate.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
                labelDate.setForeground(new java.awt.Color(255, 255, 255));
                labelDate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                labelDate.setText("Tanggal dan waktu");
                panel_nav.add(labelDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 10, 122, -1));

                labelName.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
                labelName.setForeground(new java.awt.Color(255, 255, 255));
                labelName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
                labelName.setText("Nama Kasir");
                panel_nav.add(labelName, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 30, 360, 30));

                labelRole.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
                labelRole.setForeground(new java.awt.Color(255, 255, 255));
                labelRole.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
                labelRole.setText("Role");
                panel_nav.add(labelRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 10, 120, -1));

                labelIdEmployee.setFont(new java.awt.Font("Century Gothic", 2, 12)); // NOI18N
                labelIdEmployee.setForeground(new java.awt.Color(255, 255, 255));
                labelIdEmployee.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
                labelIdEmployee.setText("Id Employee");
                panel_nav.add(labelIdEmployee, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 10, 122, -1));

                labelPicture.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                labelPicture.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/unindra/kkp_kelompok4/resource/image/HomeApp/defaultPic.png"))); // NOI18N
                panel_nav.add(labelPicture, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 10, 60, 50));

                getContentPane().add(panel_nav, java.awt.BorderLayout.PAGE_START);

                panel_side.setBackground(new java.awt.Color(255, 255, 255));
                panel_side.setMinimumSize(new java.awt.Dimension(250, 100));

                menus.setBackground(new java.awt.Color(255, 255, 255));
                menus.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
                        public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                                menusMouseWheelMoved(evt);
                        }
                });
                menus.setLayout(new javax.swing.BoxLayout(menus, javax.swing.BoxLayout.Y_AXIS));

                javax.swing.GroupLayout panel_sideLayout = new javax.swing.GroupLayout(panel_side);
                panel_side.setLayout(panel_sideLayout);
                panel_sideLayout.setHorizontalGroup(
                        panel_sideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_sideLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(menus, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                );
                panel_sideLayout.setVerticalGroup(
                        panel_sideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(menus, javax.swing.GroupLayout.DEFAULT_SIZE, 698, Short.MAX_VALUE)
                );

                getContentPane().add(panel_side, java.awt.BorderLayout.LINE_START);

                panel_content.setBackground(new java.awt.Color(255, 255, 255));

                panel_Utama.setBackground(new java.awt.Color(255, 255, 255));
                panel_Utama.setLayout(new javax.swing.BoxLayout(panel_Utama, javax.swing.BoxLayout.LINE_AXIS));

                javax.swing.GroupLayout panel_contentLayout = new javax.swing.GroupLayout(panel_content);
                panel_content.setLayout(panel_contentLayout);
                panel_contentLayout.setHorizontalGroup(
                        panel_contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panel_contentLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(panel_Utama, javax.swing.GroupLayout.DEFAULT_SIZE, 725, Short.MAX_VALUE)
                                .addContainerGap())
                );
                panel_contentLayout.setVerticalGroup(
                        panel_contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_contentLayout.createSequentialGroup()
                                .addComponent(panel_Utama, javax.swing.GroupLayout.DEFAULT_SIZE, 685, Short.MAX_VALUE)
                                .addContainerGap())
                );

                getContentPane().add(panel_content, java.awt.BorderLayout.CENTER);

                setSize(new java.awt.Dimension(1040, 807));
                setLocationRelativeTo(null);
        }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
	panel_Utama.add(new homePage());
        panel_Utama.repaint();
        panel_Utama.revalidate();
    }//GEN-LAST:event_formWindowOpened

        private void menusMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_menusMouseWheelMoved
                evt.consume();
        }//GEN-LAST:event_menusMouseWheelMoved

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(homeApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(homeApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(homeApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(homeApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
////        java.awt.EventQueue.invokeLater(new Runnable() {
////            @Override
////            public void run() {
////                new homeApp().setVisible(true);
////            }
////        });
//    }

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JLabel Separate;
        private javax.swing.JLabel Seperate;
        private javax.swing.JLabel labelDate;
        private javax.swing.JLabel labelIcon;
        private javax.swing.JLabel labelIdEmployee;
        private javax.swing.JLabel labelMinimarket;
        private javax.swing.JLabel labelName;
        private javax.swing.JLabel labelPicture;
        private javax.swing.JLabel labelRole;
        private javax.swing.JLabel labelTime;
        private javax.swing.JPanel menus;
        private javax.swing.JPanel panel_Utama;
        private javax.swing.JPanel panel_content;
        private javax.swing.JPanel panel_nav;
        private javax.swing.JPanel panel_side;
        // End of variables declaration//GEN-END:variables

   private void execute() {
    //inisiasi gambar icon
    //iconMenu
   
   ImageIcon iconMaster = new ImageIcon(getClass().getResource("/edu/unindra/kkp_kelompok4/resource/image/homeApp/master.png"));
   ImageIcon iconTransaksi = new ImageIcon(getClass().getResource("/edu/unindra/kkp_kelompok4/resource/image/homeApp/transaksi.png"));
   ImageIcon iconReport = new ImageIcon(getClass().getResource("/edu/unindra/kkp_kelompok4/resource/image/homeApp/report.png"));
   ImageIcon iconAccount = new ImageIcon(getClass().getResource("/edu/unindra/kkp_kelompok4/resource/image/homeApp/account.png"));
   
   //icon drop down
   ImageIcon dropUp = new ImageIcon(getClass().getResource("/edu/unindra/kkp_kelompok4/resource/image/homeApp/up.png"));
   ImageIcon dropDown = new ImageIcon(getClass().getResource("/edu/unindra/kkp_kelompok4/resource/image/homeApp/down.png"));
   
   //icon subMenu
   //submenu Pengaturan
    ImageIcon accountSetting = new ImageIcon( getClass().getResource("/edu/unindra/kkp_kelompok4/resource/image/homeApp/userSet.png"));
     ImageIcon logout = new ImageIcon( getClass().getResource("/edu/unindra/kkp_kelompok4/resource/image/homeApp/logout.png"));
    ImageIcon homePage = new ImageIcon( getClass().getResource("/edu/unindra/kkp_kelompok4/resource/image/homeApp/icons8_home_34px_1.png"));
  
//subMenu Master
 ImageIcon masterItemIcon = new ImageIcon( getClass().getResource("/edu/unindra/kkp_kelompok4/resource/image/homeApp/icons8_open_box_28px.png"));
 ImageIcon masterEmployeeIcon = new ImageIcon( getClass().getResource("/edu/unindra/kkp_kelompok4/resource/image/homeApp/icons8_worker_28px.png"));
 ImageIcon masterDistributorIcon = new ImageIcon( getClass().getResource("/edu/unindra/kkp_kelompok4/resource/image/homeApp/icons8_truck_28px.png"));
 ImageIcon masterTypeItemIcon = new ImageIcon( getClass().getResource("/edu/unindra/kkp_kelompok4/resource/image/homeApp/icons8_exclusive_product_28px.png"));

 //subMenu Transaction
 ImageIcon transactionOrderIcon = new ImageIcon( getClass().getResource("/edu/unindra/kkp_kelompok4/resource/image/homeApp/icons8_Mobile_Order_28px_1.png"));
ImageIcon cashier = new ImageIcon(getClass().getResource("/edu/unindra/kkp_kelompok4/resource/image/homeApp/cashier.png"));
ImageIcon transaction2 = new ImageIcon(getClass().getResource("/edu/unindra/kkp_kelompok4/resource/image/homeApp/icons8_ingredients_28px_1.png"));
 
//submenu Other	
    ImageIcon iconBarang = new ImageIcon( getClass().getResource("/edu/unindra/kkp_kelompok4/resource/image/homeApp/subMaster.png"));
    
   //sunMenuIcon Report
   ImageIcon iconReportItem = new ImageIcon( getClass().getResource("/edu/unindra/kkp_kelompok4/resource/image/homeApp/icons8_open_box_28px.png"));
   ImageIcon iconReportTransaction = new ImageIcon( getClass().getResource("/edu/unindra/kkp_kelompok4/resource/image/homeApp/icons8_Coin_Wallet_28px.png"));
   ImageIcon iconReportBuy = new ImageIcon( getClass().getResource("/edu/unindra/kkp_kelompok4/resource/image/homeApp/icons8_buy_for_cash_28px.png"));
   ImageIcon cashierPerformance = new ImageIcon( getClass().getResource("/edu/unindra/kkp_kelompok4/resource/image/homeApp/icons8_Sales_Performance_Balance_28px.png"));
   ImageIcon detailBuyIcon = new ImageIcon( getClass().getResource("/edu/unindra/kkp_kelompok4/resource/image/homeApp/icons8_bill_28px.png"));
   
    
   //Membuaat SubMenu
   //subMenu Master
   menuIcon subMaster1;
	    subMaster1 = new menuIcon(null,true,masterItemIcon,"Data Barang",null,null,new ActionListener() {
		    @Override
		    public void actionPerformed(ActionEvent e) {
			    panel_Utama.removeAll();
			    panel_Utama.add(new itemForm());
			    panel_Utama.repaint();
			    panel_Utama.revalidate();
		    }
	    });
	    subMaster1.addMouseListener(new  MouseAdapter(){
		@Override
		public void mouseEntered(MouseEvent e) {
		subMaster1.setBackground(new Color(198,198,198));
		}
		
		@Override
		public void mouseExited(MouseEvent e) {
		subMaster1.setBackground(null);
		}
	    });
	   
   
   
   menuIcon subMaster2;
	    subMaster2 = new menuIcon(null,true,masterEmployeeIcon,"Data Karyawan",null,null, new ActionListener() {
		    @Override
		    public void actionPerformed(ActionEvent e) {
			    panel_Utama.removeAll();
			    panel_Utama.add(new employeeForm());
			    panel_Utama.repaint();
			    panel_Utama.revalidate();
		    }
	    });
	    subMaster2.addMouseListener(new  MouseAdapter(){
		@Override
		public void mouseEntered(MouseEvent e) {
		subMaster2.setBackground(new Color(198,198,198));
		}
		
		@Override
		public void mouseExited(MouseEvent e) {
		subMaster2.setBackground(null);
		}
	    });
	    
	    
   menuIcon subMaster3;
	        subMaster3 = new menuIcon(null,true,masterDistributorIcon,"Data Distributor",null,null, new ActionListener() {
		    @Override
		    public void actionPerformed(ActionEvent e) {
			    panel_Utama.removeAll();
			    panel_Utama.add(new distributorForm());
			    panel_Utama.repaint();
			    panel_Utama.revalidate();
		    }
	    });
	    subMaster3.addMouseListener(new  MouseAdapter(){
		@Override
		public void mouseEntered(MouseEvent e) {
		subMaster3.setBackground(new Color(198,198,198));
		}
		
		@Override
		public void mouseExited(MouseEvent e) {
		subMaster3.setBackground(null);
		}
	    });
            
    menuIcon subMaster4;
	        subMaster4 = new menuIcon(null,true,masterTypeItemIcon,"Data Jenis Barang",null,null, new ActionListener() {
		    @Override
		    public void actionPerformed(ActionEvent e) {
			    panel_Utama.removeAll();
			    panel_Utama.add(new itemTypeListForm());
			    panel_Utama.repaint();
			    panel_Utama.revalidate();
		    }
	    });
	    subMaster4.addMouseListener(new  MouseAdapter(){
		@Override
		public void mouseEntered(MouseEvent e) {
		subMaster4.setBackground(new Color(198,198,198));
		}
		
		@Override
		public void mouseExited(MouseEvent e) {
		subMaster4.setBackground(null);
		}
	    });
   
   
   //subMenu Transaksi
   menuIcon transaksi1;
	    transaksi1 = new menuIcon(null,true,transactionOrderIcon,"Pesan Barang",null,null,new ActionListener() {
	   @Override
	   public void actionPerformed(ActionEvent e) {
			panel_Utama.removeAll();
			panel_Utama.add(new transactionItem(labelIdEmployee.getText()));
			panel_Utama.repaint();
			panel_Utama.revalidate();
	   }
	    });
	     transaksi1.addMouseListener(new  MouseAdapter(){
		@Override
		public void mouseEntered(MouseEvent e) {
		transaksi1.setBackground(new Color(198,198,198));
		}
		
		@Override
		public void mouseExited(MouseEvent e) {
		transaksi1.setBackground(null);
		}
	    });
   menuIcon transaksi2;
	    transaksi2 = new menuIcon(null,true,transaction2,"Barang Masuk",null,null,new ActionListener() {
	   @Override
	   public void actionPerformed(ActionEvent e) {
		panel_Utama.removeAll();
		panel_Utama.add(new transactionIncomingItem(labelIdEmployee.getText()));
		panel_Utama.repaint();
		panel_Utama.revalidate();
	   }
	    });
	     transaksi2.addMouseListener(new  MouseAdapter(){
		@Override
		public void mouseEntered(MouseEvent e) {
		transaksi2.setBackground(new Color(198,198,198));
		}
		
		@Override
		public void mouseExited(MouseEvent e) {
		transaksi2.setBackground(null);
		}
	    });
//   menuIcon transaksi3; 
//	   transaksi3= new menuIcon(null,true,iconBarang,"Transaksi3",null,null,null);
//	   transaksi3.addMouseListener(new  MouseAdapter(){
//		@Override
//		public void mouseEntered(MouseEvent e) {
//		transaksi3.setBackground(new Color(198,198,198));
//		}
//		
//		@Override
//		public void mouseExited(MouseEvent e) {
//		transaksi3.setBackground(null);
//		}
//	    });
	   
	   
	   
	   //subMenu Report
	   menuIcon report1; 
	   report1= new menuIcon(null,true,iconReportItem,"Barang",null,null,new ActionListener() {
	   @Override
	   public void actionPerformed(ActionEvent e) {
		panel_Utama.removeAll();
		panel_Utama.add(new reportItem());
		panel_Utama.repaint();
		panel_Utama.revalidate();
	   }
	   });
	   report1.addMouseListener(new  MouseAdapter(){
		@Override
		public void mouseEntered(MouseEvent e) {
		report1.setBackground(new Color(198,198,198));
		}
		
		@Override
		public void mouseExited(MouseEvent e) {
		report1.setBackground(null);
		}
	    });
	   
	   menuIcon report2; 
	   report2= new menuIcon(null,true,iconReportTransaction,"Penjualan",null,null,new ActionListener() {
	   @Override
	   public void actionPerformed(ActionEvent e) {
		panel_Utama.removeAll();
		panel_Utama.add(new reportTransaction());
		panel_Utama.repaint();
		panel_Utama.revalidate();
	   }
	   });
	   report2.addMouseListener(new  MouseAdapter(){
		@Override
		public void mouseEntered(MouseEvent e) {
		report2.setBackground(new Color(198,198,198));
		}
		
		@Override
		public void mouseExited(MouseEvent e) {
		report2.setBackground(null);
		}
	    });

	   menuIcon report3; 
	   report3= new menuIcon(null,true,detailBuyIcon,"Detail Pemesanan",null,null,new ActionListener() {
	   @Override
	   public void actionPerformed(ActionEvent e) {
		panel_Utama.removeAll();
		panel_Utama.add(new reportOrder());
		panel_Utama.repaint();
		panel_Utama.revalidate();
	   }
	   });
	   report3.addMouseListener(new  MouseAdapter(){
		@Override
		public void mouseEntered(MouseEvent e) {
		report3.setBackground(new Color(198,198,198));
		}
		
		@Override
		public void mouseExited(MouseEvent e) {
		report3.setBackground(null);
		}
	    });
	   
	  
	   menuIcon report4; 
	   report4= new menuIcon(null,true,iconReportBuy,"Pemesanan",null,null,new ActionListener() {
	   @Override
	   public void actionPerformed(ActionEvent e) {
		panel_Utama.removeAll();
		panel_Utama.add(new reportOrderWareHouse());
		panel_Utama.repaint();
		panel_Utama.revalidate();
	   }
	   });
	   report4.addMouseListener(new  MouseAdapter(){
		@Override
		public void mouseEntered(MouseEvent e) {
		report4.setBackground(new Color(198,198,198));
		}
		
		@Override
		public void mouseExited(MouseEvent e) {
		report4.setBackground(null);
		}
	    });
	   menuIcon report5; 
	   report5= new menuIcon(null,true,cashierPerformance,"Report Kasir Harian",null,null,new ActionListener() {
	   @Override
	   public void actionPerformed(ActionEvent e) {
		panel_Utama.removeAll();
		panel_Utama.add(new reportPerformanceCashier(labelName.getText()));
		panel_Utama.repaint();
		panel_Utama.revalidate();
	   }
	   });
	   report5.addMouseListener(new  MouseAdapter(){
		@Override
		public void mouseEntered(MouseEvent e) {
		report5.setBackground(new Color(198,198,198));
		}
		
		@Override
		public void mouseExited(MouseEvent e) {
		report5.setBackground(null);
		}
	    });
   //submenu pengaturan
   menuIcon accountSet;
	    accountSet = new menuIcon(null, true, accountSetting, "Pengaturan Akun",null, null,new ActionListener() {
	   @Override
	   public void actionPerformed(ActionEvent e) {
			panel_Utama.removeAll();
			panel_Utama.add(new accountSetting(labelIdEmployee.getText()));
			panel_Utama.repaint();
			panel_Utama.revalidate();
	   }
	    });
	     accountSet.addMouseListener(new  MouseAdapter(){
		@Override
		public void mouseEntered(MouseEvent e) {
		accountSet.setBackground(new Color(198,198,198));
		}
		
		@Override
		public void mouseExited(MouseEvent e) {
		accountSet.setBackground(null);
		}
	    });
	    
   menuIcon logoutSet;
	    logoutSet = new menuIcon(null, true, logout, "logout",null,null, new ActionListener() {
		    @Override
		    public void actionPerformed(ActionEvent e) {
			    dispose();
			    new edu.unindra.kkp_kelompok4.login.formLogin().setVisible(true);
		    }
	    });
	    logoutSet.addMouseListener(new  MouseAdapter(){
		@Override
		public void mouseEntered(MouseEvent e) {
		logoutSet.setBackground(new Color(198,198,198));
		}
		
		@Override
		public void mouseExited(MouseEvent e) {
		logoutSet.setBackground(null);
		}
	    });
	    
   
  
   menuIcon menuCashier = new menuIcon(null,true,cashier,"Cashier",null,null,new ActionListener() {
       @Override
       public void actionPerformed(ActionEvent e) {
        panel_Utama.removeAll();
        panel_Utama.add(new Cashier(labelIdEmployee.getText()));
        panel_Utama.repaint();
        panel_Utama.revalidate();
       }
   });
   menuCashier.addMouseListener(new  MouseAdapter(){
		@Override
		public void mouseEntered(MouseEvent e) {
		menuCashier.setBackground(new Color(198,198,198));
		}
		
		@Override
		public void mouseExited(MouseEvent e) {
		menuCashier.setBackground(null);
		}
   });
   
     menuIcon home = new menuIcon(homePage,false,null,"Home Page",null,null,new ActionListener() {
       @Override
       public void actionPerformed(ActionEvent e) {
        panel_Utama.removeAll();
        panel_Utama.add(new homePage());
        panel_Utama.repaint();
        panel_Utama.revalidate();
       }
   });
   home.addMouseListener(new  MouseAdapter(){
		@Override
		public void mouseEntered(MouseEvent e) {
		home.setBackground(new Color(198,198,198));
		}
		
		@Override
		public void mouseExited(MouseEvent e) {
		home.setBackground(null);
		}
   });
   
   
   
   menuIcon menuMaster =null;
	    
	    	    
		    
//   menuIcon menuTransaksi= new menuIcon(iconTransaksi,false,null,"Transaksi",dropDown,dropUp,null,transaksi1,transaksi2,menuCashier);
//		    menuTransaksi.addMouseListener(new  MouseAdapter(){
//		@Override
//		public void mouseEntered(MouseEvent e) {
//		menuTransaksi.setBackground(new Color(198,198,198));
//		}
//		
//		@Override
//		public void mouseExited(MouseEvent e) {
//		menuTransaksi.setBackground(null);
//		}
//	    });
   
   menuIcon menuReport=null;
   
   menuIcon Account = new menuIcon(iconAccount,false,null,"Akun",dropDown,dropUp,null,accountSet,logoutSet);
		Account.addMouseListener(new  MouseAdapter(){
		@Override
		public void mouseEntered(MouseEvent e) {
		Account.setBackground(new Color(198,198,198));
		}
		
		@Override
		public void mouseExited(MouseEvent e) {
		Account.setBackground(null);
		}
	    });
   
   
 menuIcon menuTransaksi = null;
   
	String roleUser= labelRole.getText();
   	if (roleUser.equalsIgnoreCase("cashier")) {
	menuMaster = new menuIcon(iconMaster,false,null,"Master",dropDown,dropUp,null,subMaster1,subMaster3,subMaster4);
	menuMaster.setVisible(false);
	menuReport= new menuIcon(iconReport,false,null,"Laporan",dropDown,dropUp,null,report5);
	menuTransaksi = new menuIcon(iconTransaksi, false, null, "Transaksi", dropDown, dropUp, null, menuCashier);
	}else if (roleUser.equalsIgnoreCase("Warehouse")) {
	menuMaster = new menuIcon(iconMaster,false,null,"Master",dropDown,dropUp,null,subMaster1,subMaster3,subMaster4);
	menuReport= new menuIcon(iconReport,false,null,"Laporan",dropDown,dropUp,null,report1,report4);
	menuTransaksi = new menuIcon(iconTransaksi, false, null, "Transaksi", dropDown, dropUp, null, transaksi1);
	}else if (roleUser.equalsIgnoreCase("admin")) {
	menuReport= new menuIcon(iconReport,false,null,"Laporan",dropDown,dropUp,null,report2,report3);
	menuMaster = new menuIcon(iconMaster,false,null,"Master",dropDown,dropUp,null,subMaster2);
	menuTransaksi = new menuIcon(iconTransaksi, false, null, "Transaksi", dropDown, dropUp, null, transaksi2);
	}else if (roleUser.equalsIgnoreCase("Owner")) {
	menuMaster = new menuIcon(iconMaster,false,null,"Master",dropDown,dropUp,null,subMaster1,subMaster2,subMaster3,subMaster4);
	menuReport= new menuIcon(iconReport,false,null,"Laporan",dropDown,dropUp,null,report1,report2,report4,report3,report5);
	menuTransaksi = new menuIcon(iconTransaksi, false, null, "Transaksi", dropDown, dropUp, null, transaksi1,transaksi2,menuCashier);
	   }
 {

	//menambahkan menu
   addMenu(home,menuMaster,menuTransaksi,menuReport, Account);
    }
   }
   
   
   private void timeLabel() {
    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm:ss");
    
    Thread thread = new Thread(() -> {
        while (true) {
            LocalDateTime currentTime = LocalDateTime.now();
	    service.displayAccount(account);
	    byte[]picture = account.getPictures();
	    String name = account.getEmployeeName();
	    String role = account.getRole();
            try {
                Thread.sleep(1000);
		 updatePicture(picture);
		    updateName(name);
		    updateRole(role);
		 
            } catch (InterruptedException e) {
                e.printStackTrace();
            }

            String formattedTime = formatter.format(currentTime);
            EventQueue.invokeLater(() -> labelTime.setText(formattedTime));
        }
    });
    thread.start();
}


    private void addMenu(menuIcon...menu){
        for (int i = 0; i< menu.length;i++){
            menus.add(menu[i]);
            ArrayList<menuIcon>subMenu =menu[i].getSubMenu();
            for(menuIcon m : subMenu){
                addMenu(m);
            }
        }
        menus.revalidate();
    }
    
    private void darkMode(){
	    try {
		    UIManager.setLookAndFeel(new FlatDarkLaf());
		    SwingUtilities.updateComponentTreeUI(this.getContentPane());
	    } catch (Exception e) {
		    e.printStackTrace();
	    }
    }
    
    private void lightMode() {
    try {
        UIManager.setLookAndFeel(new FlatLightLaf());
        SwingUtilities.updateComponentTreeUI(this);
    } catch (Exception ex) {
        ex.printStackTrace();
    }
    }

    private void updateRole(String role) {
    labelRole.setText(role);
}

private void updateName(String name) {
    labelName.setText(name);
}

    
private void updatePicture(byte[] picture) {
	
    try {
        if (picture != null && picture.length > 0) {
            ImageIcon img = new ImageIcon(picture);
            // Mengubah ukuran gambar sesuai kebutuhan
            int labelWidth = 150;
            int labelHeight = 90;
            int pictureWidth = img.getIconWidth();
            int pictureHeight = img.getIconHeight();
            double scaleX = (double) labelWidth / (double) pictureWidth;
            double scaleY = (double) labelHeight / (double) pictureHeight;
            double scale = Math.min(scaleX, scaleY);
            Image scaledPicture = img.getImage().getScaledInstance((int) (scale * pictureWidth), (int) (scale * pictureHeight), Image.SCALE_SMOOTH);

            labelPicture.setIcon(new ImageIcon(scaledPicture));
	    
        } else {
            // Mengatur ikon asli atau placeholder jika Blob picture kosong
            labelPicture.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/unindra/kkp_kelompok4/resource/image/HomeApp/defaultPic.png")));
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
}

//public void updateProfilePicture(byte[] newPicture) {
//    updatePicture(newPicture);
//}

//public void updateProfilePicture(byte[] newPicture) {
//    ImageIcon img;
//    
//    try {
//        if (newPicture != null && newPicture.length > 0) {
//            img = new ImageIcon(newPicture);
//        } else {
//            img = new ImageIcon(getClass().getResource("/edu/unindra/kkp_kelompok4/resource/image/HomeApp/defaultPic.png"));
//        }
//        
//        // Mengubah ukuran gambar sesuai kebutuhan
//        int labelWidth = 150;
//        int labelHeight = 90;
//        int pictureWidth = img.getIconWidth();
//        int pictureHeight = img.getIconHeight();
//        double scaleX = (double) labelWidth / (double) pictureWidth;
//        double scaleY = (double) labelHeight / (double) pictureHeight;
//        double scale = Math.min(scaleX, scaleY);
//        Image scaledPicture = img.getImage().getScaledInstance((int) (scale * pictureWidth), (int) (scale * pictureHeight), Image.SCALE_SMOOTH);
//        
//        labelPicture.setIcon(new ImageIcon(scaledPicture));
//    } catch (Exception e) {
//        e.printStackTrace();
//    }
//
//}

//    
    
    
//    private Image createRoundedImage(Image image) {
//int imageSize = Math.min(image.getWidth(null), image.getHeight(null));
//    BufferedImage roundedImage = new BufferedImage(imageSize, imageSize, BufferedImage.TYPE_INT_ARGB);
//    Graphics2D g2d = roundedImage.createGraphics();
//    g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
//    g2d.setClip(new Ellipse2D.Float(0, 0, imageSize, imageSize));
//    g2d.drawImage(image, 0, 0, imageSize, imageSize, null);
//    g2d.dispose();
//    return roundedImage;
//}

//    public void refreshData(){
//	    if (refresh) {
//		    dispose();
//	    }
//    }
//    
//	private void refreshDataValidation() {
//		modelEmployee employee = new modelEmployee();
//		labelRole.setText(employee.getRole());
//		labelName.setText(employee.getEmployeeName());
//		labelIdEmployee.setText(employee.getIdEmployee());
//		byte[]picture = employee.getPictures();
//		
//		try {
//		if (picture != null && picture.length > 0) {
////		    byte[] profilePic = picture.getBytes(1, (int) picture.length());
//		    ImageIcon img = new ImageIcon(picture);
//		    // Mengubah ukuran gambar sesuai kebutuhan
//		    int labelWidth = 150;
//		    int labelHeight = 90;
//		    int pictureWidth = img.getIconWidth();
//		    int pictureHeight = img.getIconHeight();
//		    double scaleX = (double) labelWidth / (double) pictureWidth;
//		    double scaleY = (double) labelHeight / (double) pictureHeight;
//		    double scale = Math.min(scaleX, scaleY);
//		    Image scaledPicture = img.getImage().getScaledInstance((int) (scale * pictureWidth), (int) (scale * pictureHeight), Image.SCALE_SMOOTH);
//
//		    labelPicture.setIcon(new ImageIcon(scaledPicture));
//		} else {
//		    // Mengatur ikon asli atau placeholder jika Blob picture kosong
//		     labelPicture.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/unindra/kkp_kelompok4/resource/image/HomeApp/defaultPic.png")));
//		}
//	        } catch (Exception e) {
//		    e.printStackTrace();
//	}
//		 revalidate(); 
//	}
}
