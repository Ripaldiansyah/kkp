/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package edu.unindra.kkp_kelompok4.cashier;


import com.formdev.flatlaf.ui.FlatComboBoxUI;
import edu.unindra.kkp_kelompok4.Services.serviceCashier;
import edu.unindra.kkp_kelompok4.Services.serviceDetailCartCashier;
import edu.unindra.kkp_kelompok4.Services.serviceDetailCashier;
import edu.unindra.kkp_kelompok4.Services.serviceItem;
import edu.unindra.kkp_kelompok4.TableModel.tableModelCashierCart;
import edu.unindra.kkp_kelompok4.TableModel.tableModelCheckin;
import edu.unindra.kkp_kelompok4.dao.DAO_Cashier;
import edu.unindra.kkp_kelompok4.dao.DAO_DetailCartCashier;
import edu.unindra.kkp_kelompok4.dao.DAO_DetailCashier;
import edu.unindra.kkp_kelompok4.dao.DAO_Items;
import edu.unindra.kkp_kelompok4.lock.NumberOnlyFilter;
import java.awt.*;
import javax.swing.*;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import edu.unindra.kkp_kelompok4.lock.lockApp;
import edu.unindra.kkp_kelompok4.model.modelCashier;
import edu.unindra.kkp_kelompok4.model.modelCashierCart;
import edu.unindra.kkp_kelompok4.model.modelDetailCashier;
import edu.unindra.kkp_kelompok4.model.modelDetailCashierDraft;
import edu.unindra.kkp_kelompok4.model.modelEmployee;
import edu.unindra.kkp_kelompok4.model.modelItem;
import edu.unindra.kkp_kelompok4.transaction.listItem;
import java.util.List;
import java.util.Locale;
import javax.swing.text.AbstractDocument;
/**
 *
 * @author ripal
 */
public class Cashier extends javax.swing.JPanel {
	private serviceCashier service = new DAO_Cashier();
	private serviceDetailCartCashier serviceCartCashier = new DAO_DetailCartCashier();
	private serviceItem serviceItem = new DAO_Items();
	private serviceDetailCashier serviceDetailCashier = new DAO_DetailCashier();
	
	public modelItem itemSetterGetter = new modelItem();
	
	
	private tableModelCashierCart cashierCart = new tableModelCashierCart();
	modelEmployee idGet = new modelEmployee();
	 String  id ;
    public Cashier(String idEmployee) {
	    idGet.setIdEmployee(idEmployee);
	    id = idEmployee;
	     serviceCartCashier.deleteAllCart();
        initComponents();
	((AbstractDocument) paidField.getDocument()).setDocumentFilter(new NumberOnlyFilter());
	((AbstractDocument) totalItem.getDocument()).setDocumentFilter(new NumberOnlyFilter());
	tableOrder.setModel(cashierCart);
//	    AutoCompleteDecorator.decorate(itemList);
//	    itemList.setUI(new FlatComboBoxUI());
//	    itemList.removeAllItems();
//	    itemListSearch();
	    orderId.setText(service.number());
	    setDate();
	    disableField();
	    loadData();
	    deteleItemButton.setVisible(false);
	    totalItem.setEnabled(false);
	    returnsField.setEnabled(false);
	    
	    
//        Colorheader();
//        tfItem.setText("Masukan Kode Barang atau Nama Barang");
		
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                MainPanel = new javax.swing.JPanel();
                addPanel = new javax.swing.JPanel();
                btAdd = new javax.swing.JLabel();
                jButton2 = new javax.swing.JButton();
                sumPanel = new javax.swing.JPanel();
                totalLabel = new javax.swing.JLabel();
                priceLabel = new javax.swing.JLabel();
                tablePanel = new javax.swing.JPanel();
                jScrollPane1 = new javax.swing.JScrollPane();
                tableOrder = new javax.swing.JTable();
                itemCode = new javax.swing.JLabel();
                PaymentPanel = new javax.swing.JPanel();
                PaymentLabel = new javax.swing.JLabel();
                returnsLabel = new javax.swing.JLabel();
                payLabel = new javax.swing.JLabel();
                payLabel1 = new javax.swing.JLabel();
                paidPanel = new javax.swing.JPanel();
                paidField = new javax.swing.JTextField();
                rpLabel2 = new javax.swing.JLabel();
                listMethod = new javax.swing.JComboBox<>();
                shoppingReturns = new javax.swing.JPanel();
                returnsField = new javax.swing.JTextField();
                rpLabel1 = new javax.swing.JLabel();
                payButton = new javax.swing.JButton();
                paymentDetails = new javax.swing.JPanel();
                jLabel1 = new javax.swing.JLabel();
                orderId = new javax.swing.JTextField();
                jLabel10 = new javax.swing.JLabel();
                jLabel11 = new javax.swing.JLabel();
                dateOrder = new javax.swing.JTextField();
                totalItem = new javax.swing.JTextField();
                lockApp = new javax.swing.JLabel();
                deteleItemButton = new javax.swing.JButton();
                buttonPanel = new javax.swing.JPanel();
                newTransaction = new javax.swing.JLabel();
                Seperate = new javax.swing.JLabel();
                openTransaction = new javax.swing.JLabel();
                Seperate1 = new javax.swing.JLabel();
                saveDraft = new javax.swing.JLabel();
                Seperate2 = new javax.swing.JLabel();
                openDraft = new javax.swing.JLabel();
                Seperate3 = new javax.swing.JLabel();
                aboutApp = new javax.swing.JLabel();
                Seperate4 = new javax.swing.JLabel();
                reportBug = new javax.swing.JLabel();

                setBackground(new java.awt.Color(255, 255, 255));
                setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

                MainPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

                addPanel.setBackground(new java.awt.Color(255, 255, 255));

                btAdd.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
                btAdd.setText("Cari Barang");

                jButton2.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
                jButton2.setText("Pilih Barang");
                jButton2.setToolTipText("");
                jButton2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
                jButton2.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButton2ActionPerformed(evt);
                        }
                });

                javax.swing.GroupLayout addPanelLayout = new javax.swing.GroupLayout(addPanel);
                addPanel.setLayout(addPanelLayout);
                addPanelLayout.setHorizontalGroup(
                        addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(addPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(addPanelLayout.createSequentialGroup()
                                                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addContainerGap())
                                        .addGroup(addPanelLayout.createSequentialGroup()
                                                .addComponent(btAdd)
                                                .addGap(53, 229, Short.MAX_VALUE))))
                );
                addPanelLayout.setVerticalGroup(
                        addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(addPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13)
                                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                                .addContainerGap())
                );

                MainPanel.add(addPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 320, 90));

                sumPanel.setBackground(new java.awt.Color(255, 255, 255));
                sumPanel.setForeground(new java.awt.Color(0, 0, 255));

                totalLabel.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
                totalLabel.setText("Total");

                priceLabel.setFont(new java.awt.Font("Century Gothic", 1, 36)); // NOI18N
                priceLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
                priceLabel.setText("Rp. 000, 000");

                javax.swing.GroupLayout sumPanelLayout = new javax.swing.GroupLayout(sumPanel);
                sumPanel.setLayout(sumPanelLayout);
                sumPanelLayout.setHorizontalGroup(
                        sumPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(sumPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(sumPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(totalLabel)
                                        .addComponent(priceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(41, Short.MAX_VALUE))
                );
                sumPanelLayout.setVerticalGroup(
                        sumPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(sumPanelLayout.createSequentialGroup()
                                .addComponent(totalLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                                .addComponent(priceLabel)
                                .addGap(0, 3, Short.MAX_VALUE))
                );

                MainPanel.add(sumPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 0, 430, 90));

                tablePanel.setBackground(new java.awt.Color(255, 255, 255));

                tableOrder.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {
                                {null, null, null, null},
                                {null, null, null, null},
                                {null, null, null, null},
                                {null, null, null, null}
                        },
                        new String [] {
                                "Title 1", "Title 2", "Title 3", "Title 4"
                        }
                ));
                tableOrder.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                tableOrderMouseClicked(evt);
                        }
                });
                jScrollPane1.setViewportView(tableOrder);

                itemCode.setText("ItemCode");

                javax.swing.GroupLayout tablePanelLayout = new javax.swing.GroupLayout(tablePanel);
                tablePanel.setLayout(tablePanelLayout);
                tablePanelLayout.setHorizontalGroup(
                        tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                        .addGroup(tablePanelLayout.createSequentialGroup()
                                .addGap(124, 124, 124)
                                .addComponent(itemCode)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );
                tablePanelLayout.setVerticalGroup(
                        tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, tablePanelLayout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(itemCode)
                                .addGap(0, 0, Short.MAX_VALUE))
                );

                MainPanel.add(tablePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 170, 500, 370));

                PaymentPanel.setBackground(new java.awt.Color(0, 0, 255));
                PaymentPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 255), 1, true));
                PaymentPanel.setForeground(new java.awt.Color(51, 0, 204));
                PaymentPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

                PaymentLabel.setFont(new java.awt.Font("Century Gothic", 1, 48)); // NOI18N
                PaymentLabel.setForeground(new java.awt.Color(255, 255, 255));
                PaymentLabel.setText("Payment");
                PaymentPanel.add(PaymentLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, -1, 50));

                returnsLabel.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
                returnsLabel.setForeground(new java.awt.Color(255, 255, 255));
                returnsLabel.setText("Kembalian");
                PaymentPanel.add(returnsLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, -1, 20));

                payLabel.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
                payLabel.setForeground(new java.awt.Color(255, 255, 255));
                payLabel.setText("Metode Pembayaran");
                PaymentPanel.add(payLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, 20));

                payLabel1.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
                payLabel1.setForeground(new java.awt.Color(255, 255, 255));
                payLabel1.setText("Uang yang dibayar");
                PaymentPanel.add(payLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, 20));

                paidPanel.setBackground(new java.awt.Color(255, 255, 255));

                paidField.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
                paidField.setToolTipText("");
                paidField.setBorder(null);
                paidField.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                paidFieldActionPerformed(evt);
                        }
                });
                paidField.addKeyListener(new java.awt.event.KeyAdapter() {
                        public void keyReleased(java.awt.event.KeyEvent evt) {
                                paidFieldKeyReleased(evt);
                        }
                });

                rpLabel2.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
                rpLabel2.setText("Rp.");

                javax.swing.GroupLayout paidPanelLayout = new javax.swing.GroupLayout(paidPanel);
                paidPanel.setLayout(paidPanelLayout);
                paidPanelLayout.setHorizontalGroup(
                        paidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paidPanelLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(rpLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(paidField, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(53, 53, 53))
                );
                paidPanelLayout.setVerticalGroup(
                        paidPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(rpLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                        .addComponent(paidField)
                );

                PaymentPanel.add(paidPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 220, 40));

                listMethod.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
                listMethod.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Metode Pembayaran", "CASH", "QRIS", "BANK TRANSFERT", "DEBIT", "OTHER" }));
                listMethod.setBorder(null);
                PaymentPanel.add(listMethod, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 220, 40));

                shoppingReturns.setBackground(new java.awt.Color(255, 255, 255));

                returnsField.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
                returnsField.setToolTipText("");
                returnsField.setBorder(null);
                returnsField.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                returnsFieldActionPerformed(evt);
                        }
                });

                rpLabel1.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
                rpLabel1.setText("Rp.");

                javax.swing.GroupLayout shoppingReturnsLayout = new javax.swing.GroupLayout(shoppingReturns);
                shoppingReturns.setLayout(shoppingReturnsLayout);
                shoppingReturnsLayout.setHorizontalGroup(
                        shoppingReturnsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, shoppingReturnsLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(rpLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(returnsField, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(54, 54, 54))
                );
                shoppingReturnsLayout.setVerticalGroup(
                        shoppingReturnsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(returnsField, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                        .addComponent(rpLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                );

                PaymentPanel.add(shoppingReturns, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 220, 40));

                payButton.setFont(new java.awt.Font("Century Gothic", 1, 36)); // NOI18N
                payButton.setForeground(new java.awt.Color(0, 0, 255));
                payButton.setText("Bayar");
                payButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                payButtonActionPerformed(evt);
                        }
                });
                PaymentPanel.add(payButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, 220, 50));

                MainPanel.add(PaymentPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 170, 270, 370));

                paymentDetails.setBackground(new java.awt.Color(0, 0, 255));

                jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 10)); // NOI18N
                jLabel1.setForeground(new java.awt.Color(255, 255, 255));
                jLabel1.setText("Order ID");

                orderId.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
                orderId.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                orderIdActionPerformed(evt);
                        }
                });

                jLabel10.setFont(new java.awt.Font("Century Gothic", 0, 10)); // NOI18N
                jLabel10.setForeground(new java.awt.Color(255, 255, 255));
                jLabel10.setText("Total Barang");

                jLabel11.setFont(new java.awt.Font("Century Gothic", 0, 10)); // NOI18N
                jLabel11.setForeground(new java.awt.Color(255, 255, 255));
                jLabel11.setText("Tanggal Transaksi");

                dateOrder.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
                dateOrder.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                dateOrderActionPerformed(evt);
                        }
                });

                totalItem.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
                totalItem.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                totalItemActionPerformed(evt);
                        }
                });
                totalItem.addKeyListener(new java.awt.event.KeyAdapter() {
                        public void keyTyped(java.awt.event.KeyEvent evt) {
                                totalItemKeyTyped(evt);
                        }
                });

                lockApp.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
                lockApp.setForeground(new java.awt.Color(255, 255, 255));
                lockApp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                lockApp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/unindra/kkp_kelompok4/resource/image/CashierApp/keyWhite.png"))); // NOI18N
                lockApp.setText("<html>\nLock<br>App\n</html>");
                lockApp.setPreferredSize(new java.awt.Dimension(111, 34));
                lockApp.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                lockAppMouseClicked(evt);
                        }
                        public void mouseEntered(java.awt.event.MouseEvent evt) {
                                lockAppMouseEntered(evt);
                        }
                        public void mouseExited(java.awt.event.MouseEvent evt) {
                                lockAppMouseExited(evt);
                        }
                });

                deteleItemButton.setBackground(new java.awt.Color(255, 0, 0));
                deteleItemButton.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
                deteleItemButton.setForeground(new java.awt.Color(255, 255, 255));
                deteleItemButton.setText("Hapus Item");
                deteleItemButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                deteleItemButtonActionPerformed(evt);
                        }
                });

                javax.swing.GroupLayout paymentDetailsLayout = new javax.swing.GroupLayout(paymentDetails);
                paymentDetails.setLayout(paymentDetailsLayout);
                paymentDetailsLayout.setHorizontalGroup(
                        paymentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(paymentDetailsLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lockApp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(paymentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(paymentDetailsLayout.createSequentialGroup()
                                                .addGap(119, 119, 119)
                                                .addComponent(jLabel1))
                                        .addComponent(orderId, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(paymentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(paymentDetailsLayout.createSequentialGroup()
                                                .addGap(31, 31, 31)
                                                .addComponent(jLabel11))
                                        .addGroup(paymentDetailsLayout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(dateOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(paymentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel10)
                                        .addComponent(totalItem, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(deteleItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(24, Short.MAX_VALUE))
                );
                paymentDetailsLayout.setVerticalGroup(
                        paymentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paymentDetailsLayout.createSequentialGroup()
                                .addGroup(paymentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(paymentDetailsLayout.createSequentialGroup()
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(paymentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(paymentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                .addGroup(paymentDetailsLayout.createSequentialGroup()
                                                                        .addComponent(jLabel11)
                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(dateOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGroup(paymentDetailsLayout.createSequentialGroup()
                                                                        .addComponent(jLabel1)
                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(orderId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                        .addGroup(paymentDetailsLayout.createSequentialGroup()
                                                                .addComponent(jLabel10)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(totalItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(deteleItemButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(24, 24, 24))
                                        .addComponent(lockApp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
                );

                MainPanel.add(paymentDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 540, 770, 80));

                buttonPanel.setBackground(new java.awt.Color(255, 255, 255));
                buttonPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

                newTransaction.setBackground(new java.awt.Color(204, 204, 204));
                newTransaction.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
                newTransaction.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                newTransaction.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/unindra/kkp_kelompok4/resource/image/CashierApp/NewTransation.png"))); // NOI18N
                newTransaction.setText("<html>New<br>Transaction");
                newTransaction.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                newTransactionMouseClicked(evt);
                        }
                        public void mouseEntered(java.awt.event.MouseEvent evt) {
                                newTransactionMouseEntered(evt);
                        }
                        public void mouseExited(java.awt.event.MouseEvent evt) {
                                newTransactionMouseExited(evt);
                        }
                });
                buttonPanel.add(newTransaction, new org.netbeans.lib.awtextra.AbsoluteConstraints(-2, 0, 140, 70));

                Seperate.setFont(new java.awt.Font("Century Gothic", 1, 48)); // NOI18N
                Seperate.setText("|");
                buttonPanel.add(Seperate, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 0, 30, 71));

                openTransaction.setBackground(new java.awt.Color(204, 204, 204));
                openTransaction.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
                openTransaction.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                openTransaction.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/unindra/kkp_kelompok4/resource/image/CashierApp/OpenTransaction.png"))); // NOI18N
                openTransaction.setText("<html>Open<br>Transaction");
                openTransaction.setPreferredSize(new java.awt.Dimension(111, 34));
                openTransaction.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                openTransactionMouseClicked(evt);
                        }
                        public void mouseEntered(java.awt.event.MouseEvent evt) {
                                openTransactionMouseEntered(evt);
                        }
                        public void mouseExited(java.awt.event.MouseEvent evt) {
                                openTransactionMouseExited(evt);
                        }
                });
                buttonPanel.add(openTransaction, new org.netbeans.lib.awtextra.AbsoluteConstraints(143, 0, 110, 70));

                Seperate1.setFont(new java.awt.Font("Century Gothic", 1, 48)); // NOI18N
                Seperate1.setText("|");
                buttonPanel.add(Seperate1, new org.netbeans.lib.awtextra.AbsoluteConstraints(355, 0, -1, 70));

                saveDraft.setBackground(new java.awt.Color(204, 204, 204));
                saveDraft.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
                saveDraft.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                saveDraft.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/unindra/kkp_kelompok4/resource/image/CashierApp/Save.png"))); // NOI18N
                saveDraft.setText("<html>Save to<br> <font size =\"5\">Draft");
                saveDraft.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                saveDraftMouseClicked(evt);
                        }
                        public void mouseEntered(java.awt.event.MouseEvent evt) {
                                saveDraftMouseEntered(evt);
                        }
                        public void mouseExited(java.awt.event.MouseEvent evt) {
                                saveDraftMouseExited(evt);
                        }
                });
                buttonPanel.add(saveDraft, new org.netbeans.lib.awtextra.AbsoluteConstraints(257, 0, 110, 70));

                Seperate2.setFont(new java.awt.Font("Century Gothic", 1, 48)); // NOI18N
                Seperate2.setText("|");
                buttonPanel.add(Seperate2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 0, 30, 70));

                openDraft.setBackground(new java.awt.Color(204, 204, 204));
                openDraft.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
                openDraft.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                openDraft.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/unindra/kkp_kelompok4/resource/image/CashierApp/OpenDraft.png"))); // NOI18N
                openDraft.setText("<html>Open from<br><font size=\"5\">Draft");
                openDraft.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                openDraftMouseClicked(evt);
                        }
                        public void mouseEntered(java.awt.event.MouseEvent evt) {
                                openDraftMouseEntered(evt);
                        }
                        public void mouseExited(java.awt.event.MouseEvent evt) {
                                openDraftMouseExited(evt);
                        }
                });
                buttonPanel.add(openDraft, new org.netbeans.lib.awtextra.AbsoluteConstraints(373, 0, 120, 70));

                Seperate3.setFont(new java.awt.Font("Century Gothic", 1, 48)); // NOI18N
                Seperate3.setText("|");
                buttonPanel.add(Seperate3, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 0, 30, 70));

                aboutApp.setBackground(new java.awt.Color(204, 204, 204));
                aboutApp.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
                aboutApp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                aboutApp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/unindra/kkp_kelompok4/resource/image/CashierApp/About.png"))); // NOI18N
                aboutApp.setText("<html>About<br>App");
                aboutApp.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                aboutAppMouseClicked(evt);
                        }
                        public void mouseEntered(java.awt.event.MouseEvent evt) {
                                aboutAppMouseEntered(evt);
                        }
                        public void mouseExited(java.awt.event.MouseEvent evt) {
                                aboutAppMouseExited(evt);
                        }
                });
                buttonPanel.add(aboutApp, new org.netbeans.lib.awtextra.AbsoluteConstraints(497, 0, 114, 70));

                Seperate4.setFont(new java.awt.Font("Century Gothic", 1, 48)); // NOI18N
                Seperate4.setText("|");
                buttonPanel.add(Seperate4, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 0, -1, 70));

                reportBug.setBackground(new java.awt.Color(204, 204, 204));
                reportBug.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
                reportBug.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                reportBug.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/unindra/kkp_kelompok4/resource/image/CashierApp/Report.png"))); // NOI18N
                reportBug.setText("<html>Report<br>Bug");
                reportBug.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                reportBugMouseClicked(evt);
                        }
                        public void mouseEntered(java.awt.event.MouseEvent evt) {
                                reportBugMouseEntered(evt);
                        }
                        public void mouseExited(java.awt.event.MouseEvent evt) {
                                reportBugMouseExited(evt);
                        }
                });
                buttonPanel.add(reportBug, new org.netbeans.lib.awtextra.AbsoluteConstraints(617, 0, 137, 70));

                MainPanel.add(buttonPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 770, 70));

                add(MainPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 770, 620));
        }// </editor-fold>//GEN-END:initComponents

    private void paidFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paidFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_paidFieldActionPerformed

    private void returnsFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnsFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_returnsFieldActionPerformed

    private void orderIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orderIdActionPerformed

    private void dateOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateOrderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateOrderActionPerformed

    private void aboutAppMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aboutAppMouseClicked
         new aboutApp(null, true).show();
    }//GEN-LAST:event_aboutAppMouseClicked

    private void reportBugMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportBugMouseClicked
               showBugReportDialog();
    }//GEN-LAST:event_reportBugMouseClicked

    private void reportBugMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportBugMouseEntered
//               highlight(labelReportBug);
            reportBug.setOpaque(true);
            reportBug.setForeground(new Color(0,0,255));
    }//GEN-LAST:event_reportBugMouseEntered

    private void reportBugMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportBugMouseExited
//              unhighlight(labelReportBug);
               reportBug.setOpaque(false);
               reportBug.setForeground(new Color(0,0,0));
    }//GEN-LAST:event_reportBugMouseExited

    private void aboutAppMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aboutAppMouseEntered
                aboutApp.setOpaque(true);
                aboutApp.setForeground(new Color(0,0,255));
    }//GEN-LAST:event_aboutAppMouseEntered

    private void aboutAppMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aboutAppMouseExited
                aboutApp.setOpaque(false);
                aboutApp.setForeground(new Color(0,0,0));
    }//GEN-LAST:event_aboutAppMouseExited

    private void openDraftMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_openDraftMouseEntered
                openDraft.setOpaque(true);
                openDraft.setForeground(new Color(0,0,255));
    }//GEN-LAST:event_openDraftMouseEntered

    private void openDraftMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_openDraftMouseExited
                openDraft.setOpaque(false);
                openDraft.setForeground(new Color(0,0,0));
    }//GEN-LAST:event_openDraftMouseExited

    private void openTransactionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_openTransactionMouseEntered
                openTransaction.setOpaque(true);
                openTransaction.setForeground(new Color(0,0,255));
    }//GEN-LAST:event_openTransactionMouseEntered

    private void openTransactionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_openTransactionMouseExited
                openTransaction.setOpaque(false);
                openTransaction.setForeground(new Color(0,0,0));
    }//GEN-LAST:event_openTransactionMouseExited

    private void newTransactionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newTransactionMouseEntered
                newTransaction.setOpaque(true);
                newTransaction.setForeground(new Color(0,0,255));
    }//GEN-LAST:event_newTransactionMouseEntered

    private void newTransactionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newTransactionMouseExited
                newTransaction.setOpaque(false);
                newTransaction.setForeground(new Color(0,0,0));
    }//GEN-LAST:event_newTransactionMouseExited

    private void saveDraftMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveDraftMouseEntered
                saveDraft.setOpaque(true);
                saveDraft.setForeground(new Color(0,0,255));
    }//GEN-LAST:event_saveDraftMouseEntered

    private void saveDraftMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveDraftMouseExited
                saveDraft.setOpaque(false);
                saveDraft.setForeground(new Color(0,0,0));
    }//GEN-LAST:event_saveDraftMouseExited

    private void lockAppMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lockAppMouseEntered
                lockApp.setForeground(Color.red);
                lockApp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/unindra/kkp_kelompok4/resource/image/CashierApp/keyRed.png")));
    }//GEN-LAST:event_lockAppMouseEntered

    private void lockAppMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lockAppMouseExited
                lockApp.setForeground(Color.white);
                lockApp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/unindra/kkp_kelompok4/resource/image/CashierApp/keyWhite.png")));
    }//GEN-LAST:event_lockAppMouseExited

    private void lockAppMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lockAppMouseClicked
                new lockApp(null,true,idGet.getIdEmployee()).show();
    }//GEN-LAST:event_lockAppMouseClicked

        private void totalItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalItemActionPerformed
                String payString = payButton.getText();
		editTotalItem();
		resetForm();
		payButton.setText(payString);
        }//GEN-LAST:event_totalItemActionPerformed

        private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
                itemChoose();
        }//GEN-LAST:event_jButton2ActionPerformed

        private void tableOrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableOrderMouseClicked
                deteleItemButton.setVisible(false);
		editTotal();
		deteleItemButton.setVisible(true);
        }//GEN-LAST:event_tableOrderMouseClicked

        private void totalItemKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_totalItemKeyTyped
               
        }//GEN-LAST:event_totalItemKeyTyped

        private void deteleItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deteleItemButtonActionPerformed
                deteleItemCart();
        }//GEN-LAST:event_deteleItemButtonActionPerformed

        private void newTransactionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newTransactionMouseClicked
                serviceCartCashier.deleteAllCart();
		 orderId.setText(service.number());
		 setDate();
		loadData();
		resetForm();
		
        }//GEN-LAST:event_newTransactionMouseClicked

        private void payButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payButtonActionPerformed
                 updateTransaction();
		       saveTransaction();
		       resetForm();
		
//		String payString = payButton.getText();
//	      if (payString.equals("Update")) {
//		      updateTransaction();
//		       saveTransaction();
//		      
//		}else{
//		 saveTransaction();
//		resetForm();
//	      }
		
		
        }//GEN-LAST:event_payButtonActionPerformed

        private void paidFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_paidFieldKeyReleased
	fieldPaid();	
        }//GEN-LAST:event_paidFieldKeyReleased

        private void openTransactionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_openTransactionMouseClicked
                serviceCartCashier.deleteAllCart();
		getDataEdit();
        }//GEN-LAST:event_openTransactionMouseClicked

        private void saveDraftMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveDraftMouseClicked
                String payString = payButton.getText();
		saveDraft();
		resetForm();
		payButton.setText(payString);
        }//GEN-LAST:event_saveDraftMouseClicked

        private void openDraftMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_openDraftMouseClicked
              	getDraft();
        }//GEN-LAST:event_openDraftMouseClicked

    
    private void showBugReportDialog() {
        int result = JOptionPane.showConfirmDialog(null, "Apakah Anda ingin melaporkan bug pada aplikasi ini?", "Laporkan Bug", JOptionPane.YES_NO_OPTION);
        if (result == JOptionPane.YES_OPTION) {
            String email = "kelompok4-unindra@googlegroups.com";
            String subject = "Laporan Bug Minimarket XYZ";
            String body = "Halo,\n\nSaya menemukan bug pada aplikasi Minimarket XYZ. Untuk informasi bugnya mohon membalas email ini.\n\nTerima kasih,\n<your name>";

            String mailtoUri = String.format("mailto:%s?subject=%s&body=%s", email, subject, body);
            try {
                Desktop.getDesktop().browse(new URI(mailtoUri));
                String url = "https://mail.google.com";
                Desktop.getDesktop().browse(new URI(url));
            } catch (IOException | URISyntaxException e) {
                JOptionPane.showMessageDialog(null, "Gagal membuka email client atau Gmail. Silakan laporkan bug secara manual ke " + email, "Laporkan Bug", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
    
    private void fieldPaid(){
	    int paid;
	    int returnPaid;
	    String paidString = paidField.getText();
		String changeMoneyString = priceLabel.getText().substring(4);//misal 25.000
		String numericValue = changeMoneyString.replaceAll(",", "");//
		int value = Integer.parseInt(numericValue);
		   if (!paidString.equals("")) {
		    paid = Integer.parseInt(paidString);
		    returnPaid = paid - value;
		    if (paid<value) {
			rpLabel1.setVisible(false);
			returnsField.setText ("Uang Kurang");
		}else{
			rpLabel1.setVisible(true);
			returnsField.setText(String.valueOf(returnPaid));
		}
	    }
		
		
		
		
    }
   
        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JPanel MainPanel;
        private javax.swing.JLabel PaymentLabel;
        private javax.swing.JPanel PaymentPanel;
        private javax.swing.JLabel Seperate;
        private javax.swing.JLabel Seperate1;
        private javax.swing.JLabel Seperate2;
        private javax.swing.JLabel Seperate3;
        private javax.swing.JLabel Seperate4;
        private javax.swing.JLabel aboutApp;
        private javax.swing.JPanel addPanel;
        private javax.swing.JLabel btAdd;
        private javax.swing.JPanel buttonPanel;
        private javax.swing.JTextField dateOrder;
        private javax.swing.JButton deteleItemButton;
        private javax.swing.JLabel itemCode;
        private javax.swing.JButton jButton2;
        private javax.swing.JLabel jLabel1;
        private javax.swing.JLabel jLabel10;
        private javax.swing.JLabel jLabel11;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JComboBox<String> listMethod;
        private javax.swing.JLabel lockApp;
        private javax.swing.JLabel newTransaction;
        private javax.swing.JLabel openDraft;
        private javax.swing.JLabel openTransaction;
        private javax.swing.JTextField orderId;
        private javax.swing.JTextField paidField;
        private javax.swing.JPanel paidPanel;
        private javax.swing.JButton payButton;
        private javax.swing.JLabel payLabel;
        private javax.swing.JLabel payLabel1;
        private javax.swing.JPanel paymentDetails;
        private javax.swing.JLabel priceLabel;
        private javax.swing.JLabel reportBug;
        private javax.swing.JTextField returnsField;
        private javax.swing.JLabel returnsLabel;
        private javax.swing.JLabel rpLabel1;
        private javax.swing.JLabel rpLabel2;
        private javax.swing.JLabel saveDraft;
        private javax.swing.JPanel shoppingReturns;
        private javax.swing.JPanel sumPanel;
        private javax.swing.JTable tableOrder;
        private javax.swing.JPanel tablePanel;
        private javax.swing.JTextField totalItem;
        private javax.swing.JLabel totalLabel;
        // End of variables declaration//GEN-END:variables

//private void itemListSearch(){
//    serviceCartCashier.getDataComboBox();
//    List<modelCashierCart> cartList = serviceCartCashier.getCarts();
//    
//    if (sortBox.getSelectedIndex()==0){
//		itemList.addItem("Pilih Barang");
//		for (modelCashierCart cart : cartList) {
//		itemList.addItem(cart.getItem().getItemCode()+ " - " + cart.getItem().getItemName());
//    }
//	}else if (sortBox.getSelectedIndex()==1) {
//		itemList.addItem("Pilih Barang");
//		for (modelCashierCart cart : cartList) {
//		itemList.addItem(cart.getItem().getItemName()+ " - " + cart.getItem().getItemCode());
//	}
//	}else{
//		itemList.addItem("Pilih Barang");
//		for (modelCashierCart cart : cartList) {
//		itemList.addItem(cart.getItem().getItemCode()+ " - " + cart.getItem().getItemName());
//	}
//	}
//
//    
//}

	private void disableField() {
		orderId.setEnabled(false);
		dateOrder.setEnabled(false);
	}
	
	private void setDate(){
		Locale locale = new Locale("id", "ID");
		java.util.Date orderDateAutomatic = new java.util.Date();
		java.text.SimpleDateFormat dateOrder = new java.text.SimpleDateFormat("dd MMMM yyyy",locale);
		this.dateOrder.setText(dateOrder.format(orderDateAutomatic));
		
	}
	
	private void itemChoose(){
		boolean closable= true;
		modelItem items = new modelItem();
		modelDetailCashier detailCashier = new modelDetailCashier();
		modelCashierCart cart = new modelCashierCart();
		listItem itemList = new listItem(null,closable);
		itemList.setVisible(true);
		
		
		String codeSubString = itemList.itemSetterGetter.getItemCode();
		items.setItemCode(codeSubString);
		serviceItem.getById(items);
		int total=1;
			detailCashier.setTotalItem(total);
			int itemsInt = items.getPrice();
			int subTotal = total*itemsInt;
			
			detailCashier.setSubTotalItem(subTotal);
			
			cart.setDetailCashier(detailCashier);
			cart.setItem(items);
			
			
			 serviceCartCashier.addItem(cart);
			 serviceDetailCashier.sumItem(detailCashier);
			 priceLabel.setText(String.valueOf( "Rp. "+detailCashier.getSubTotalItem()));
			 loadData();
			 itemChoose();
		
	}

	private void saveMethod(){
		modelItem items = new modelItem();
		modelDetailCashier detailCashier = new modelDetailCashier();
		modelCashierCart cart = new modelCashierCart();
		String codeSubString = null;
//		
//		if (sortBox.getSelectedIndex()==0 && (itemList.getSelectedIndex() !=0)){
//		String code = (String) itemList.getSelectedItem();
//		codeSubString = code.substring(0,14);
//		
//		items.setItemCode(codeSubString);
//    }else if (sortBox.getSelectedIndex()==1 && (itemList.getSelectedIndex()!=0) ) {
//		String code = (String) itemList.getSelectedItem();
//		int length = code.length();
//		codeSubString = code.substring(length-14);
//	}else if(sortBox.getSelectedIndex()==2 && (itemList.getSelectedIndex()!=0)) {
//		String code = (String) itemList.getSelectedItem();
//		codeSubString = code.substring(0,14);
//	}
		
		if (codeSubString !=null) {
			items.setItemCode(codeSubString);
			serviceItem.getById(items);
			
			
			int total=1;
			detailCashier.setTotalItem(total);
			int subTotal = total*items.getPrice();
			
			
			detailCashier.setSubTotalItem(subTotal);
			
			cart.setDetailCashier(detailCashier);
			cart.setItem(items);
			
			
			 serviceCartCashier.addItem(cart);
			 serviceDetailCashier.sumItem(detailCashier);
			 priceLabel.setText(String.valueOf( "Rp. "+detailCashier.getSubTotalItem()));
			 loadData();
//			

			
		}	
		
	}
	
	private void editTotal(){
		int row = tableOrder.getSelectedRow();
		
		String code = (String) tableOrder.getValueAt(row, 1);
		
		itemCode.setText(tableOrder.getModel().getValueAt(row, 1).toString());
		totalItem.setText(tableOrder.getModel().getValueAt(row, 5).toString());
//		modelCashierCart cashierCart = serviceCartCashier.getById(code);
		
		totalItem.setEnabled(true);
		totalItem.requestFocus();
		
	}
	
	private void loadData(){
		
	List<modelCashierCart> list =serviceCartCashier.getItem();
	cashierCart.setData(list);
	modelDetailCashier detailCheckin = new modelDetailCashier();
	    serviceDetailCashier.sumItem(detailCheckin);
	    priceLabel.setText( String.valueOf( "Rp. "+NumberOnlyFilter.formatCurrency(detailCheckin.getSubTotalItem()) ));
	}
	
	private void editTotalItem(){
		modelItem items = new modelItem();
		modelDetailCashier detailCashier = new modelDetailCashier();
		modelCashierCart cart = new modelCashierCart();
		String code = itemCode.getText();
		
		items.setItemCode(code);
			serviceItem.getById(items);
		int total = Integer.parseInt(totalItem.getText());	
		if (total<=0) {
			deteleItemCart();
			
		}else{
			detailCashier.setTotalItem(total);
			int subTotal = total*items.getPrice();
			
			
			
			detailCashier.setTotalItem(total);
			detailCashier.setSubTotalItem(subTotal);
			
			cart.setDetailCashier(detailCashier);
			cart.setItem(items);
			
			
			 serviceCartCashier.renewItem(cart);
			 serviceDetailCashier.sumItem(detailCashier);
			 loadData();
			 totalItem.setText("");
			 totalItem.setEnabled(false);
		}
			
	}
	
	private void deteleItemCart(){
		int index = tableOrder.getSelectedRow();
	       
	       if (index!=-1){
		       modelCashierCart cashierCartModel = cashierCart.getData(tableOrder.convertRowIndexToModel(index));
		       if (JOptionPane.showConfirmDialog(null, "Apakah ingin menghapus data ini ?","Konfirmasi hapus data",JOptionPane.OK_CANCEL_OPTION)==JOptionPane.OK_OPTION) {
			       serviceCartCashier.deleteCart(cashierCartModel);
			       cashierCart.deleteItem(index);
			       
			       modelDetailCashier detailCashier = new modelDetailCashier();
			       serviceDetailCashier.sumItem(detailCashier);
			       priceLabel.setText(String.valueOf( detailCashier.getSubTotalItem()));
			       
			       
			       loadData();
			       totalItem.setEnabled(false);
			       deteleItemButton.setVisible(false);
			       totalItem.setText("");
		       }else{
			       JOptionPane.showMessageDialog(null, "data gagal dihapus");
		       }
	       }
	}
	
	private void saveTransaction(){
		if (validasiInput()) {
			String totalPaymentValidasi = returnsField.getText();
			if (totalPaymentValidasi.equals("Uang Kurang")) {
				JOptionPane.showMessageDialog(null, "Uang Kurang");
			}else{
				String orderIdString = orderId.getText();
			String dateString = dateOrder.getText();
			String paidString = paidField.getText();
			String returnString = returnsField.getText();
			
			
			String idEmployee = id;
			String totalOrder = priceLabel.getText().substring(4);
			String numericValue = totalOrder.replaceAll(",", "");
			String paymentMethod = (String) listMethod.getSelectedItem();
			
			int total = Integer.parseInt(numericValue);
			
			modelItem item = new modelItem();
			modelCashier cashier = new modelCashier();
			modelDetailCashier detailCashier =  new modelDetailCashier();
			modelDetailCashierDraft detailCashierDraft =  new modelDetailCashierDraft();
			modelEmployee employee = new modelEmployee();
			
			
			cashier.setOrderId(orderIdString);
			cashier.setDateOrder(dateString);
			
			cashier.setTotalOrder(total);
			employee.setIdEmployee(idEmployee);
			cashier.setEmployee(employee);
			cashier.setPayment(paymentMethod);
			
			detailCashier.setItems(item);
			detailCashier.setCashier(cashier);
			
			detailCashierDraft.setItems(item);
			detailCashierDraft.setCashier(cashier);
			
			cashier.setPaymentAmount(Integer.parseInt(paidString));
			cashier.setChangePayment(Integer.parseInt(returnString));
			service.addTransaction(cashier);
			service.deteleTransactionDraft(cashier);
			serviceDetailCashier.addDetailTransaction(detailCashier);
			serviceDetailCashier.deleteTransactionDraft(detailCashierDraft);
			
			serviceCartCashier.deleteAllCart();
			loadData();
			deteleItemButton.setVisible(false);
			totalItem.setEnabled(false);
			orderId.setText(service.number());
			setDate();
			String payButtoString = payButton.getText();
			if (payButtoString.equals("Bayar")) {
				JOptionPane.showMessageDialog(null, "Transaksi berhasil");
			}else{
				JOptionPane.showMessageDialog(null, "Update Transaksi berhasil");
			}
			resetForm();	
			}
			
		}
			
		
	}
	
	private void updateTransaction(){
		String orderIdString = orderId.getText();
		modelDetailCashier detailCashier = new modelDetailCashier();
		modelCashier cashier = new modelCashier();
		cashier.setOrderId(orderIdString);
		detailCashier.setCashier(cashier);
		serviceDetailCashier.deleteTransaction(detailCashier);
	}

	private void resetForm() {
		totalItem.setText("");
		totalItem.setEnabled(false);
		payButton.setText("Bayar");
		totalItem.setText("");
//		itemList.setSelectedIndex(0);
		listMethod.setSelectedIndex(0);
		
		returnsField.setText("");
		((AbstractDocument) paidField.getDocument()).setDocumentFilter(null);
		paidField.setText("");
		((AbstractDocument) paidField.getDocument()).setDocumentFilter(new NumberOnlyFilter());
		deteleItemButton.setVisible(false);
	}
	
	private void getDataEdit(){
		boolean closable= true;
		listTransaction transactionList = new listTransaction(null,closable);
		transactionList.setVisible(true);
		
		if (transactionList.cashierModel.getOrderId() !=null) {
			payButton.setText("Update");
			orderId.setText(transactionList.cashierModel.getOrderId());
			dateOrder.setText(transactionList.cashierModel.getDateOrder());
		}else{
			resetForm();
			orderId.setText(service.number());
			setDate();
		}
		loadData();
	}
	
		private void getDraft(){
		serviceCartCashier.deleteAllCart();
		boolean closable= true;
		listDraft draft = new listDraft(null,closable);
		draft.setVisible(true);
		
		if (draft.cashierModel.getOrderId() !=null) {
			orderId.setText(draft.cashierModel.getOrderId());
			dateOrder.setText(draft.cashierModel.getDateOrder());
		}else{
			resetForm();
			orderId.setText(service.number());
			setDate();
		}
		loadData();
	}
	
	private void saveDraft(){
			String nameTransaction = JOptionPane.showInputDialog(null, "Masukkan Nama Transaksi:", "Nama Transaksi", JOptionPane.PLAIN_MESSAGE);
			String orderIdString = orderId.getText();
			String dateString = dateOrder.getText();
			
			String nameUser = id;
			String totalOrder = priceLabel.getText().substring(4);
			String numericValue = totalOrder.replaceAll(",", "");
			String paymentMethod = (String) listMethod.getSelectedItem();
			
			int total = Integer.parseInt(numericValue);
			
			modelItem item = new modelItem();
			modelCashier cashier = new modelCashier();
			modelDetailCashierDraft detailCashier =  new modelDetailCashierDraft();
			modelEmployee employee = new modelEmployee();
			
			cashier.setOrderId(orderIdString);
			cashier.setDateOrder(dateString);
			cashier.setTotalOrder(total);
			
			employee.setIdEmployee(nameUser);
				
			cashier.setEmployee(employee);
			cashier.setPayment(paymentMethod);
			cashier.setDraftName(nameTransaction);
			
			detailCashier.setItems(item);
			detailCashier.setCashier(cashier);
			
			
			service.addDraft(cashier);
			serviceDetailCashier.deleteTransactionDraft(detailCashier);
			serviceDetailCashier.addDetailTransactionDraft(detailCashier);
			
			serviceCartCashier.deleteAllCart();
			loadData();
			deteleItemButton.setVisible(false);
			totalItem.setEnabled(false);
			orderId.setText(service.number());
			setDate();
			String payButtoString = payButton.getText();
			JOptionPane.showMessageDialog(null, "Berhasil disimpan ke draft");
			
			resetForm();
			payButton.setText("Bayar");
		
			
		
	}
	
	private boolean validasiInput(){
		boolean input=false;
		
		String changeMoneyString = priceLabel.getText().substring(4);//misal 25.000
		if (changeMoneyString.equals("0")) {
			JOptionPane.showMessageDialog(null, "Tambahkan item Terlebih dahulu");
			
		}else if (listMethod.getSelectedIndex()==0) {
			JOptionPane.showMessageDialog(null, "Pilih Metode pembayaran terlebih dahulu");
		}else if (paidField.getText().equals("")) {
			JOptionPane.showMessageDialog(null, "Masukan Nominal pembayaran terlebih dahulu");
		}else{
			input=true;
		}
		return input;
		
	}
}
